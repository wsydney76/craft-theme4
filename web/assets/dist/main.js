/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/assets/dist/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@alpinejs/collapse/dist/module.esm.js":
/*!************************************************************!*\
  !*** ./node_modules/@alpinejs/collapse/dist/module.esm.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return module_default; });\n// packages/collapse/src/index.js\nfunction src_default(Alpine) {\n  Alpine.directive(\"collapse\", collapse);\n\n  collapse.inline = (el, {\n    modifiers\n  }) => {\n    if (!modifiers.includes(\"min\")) return;\n\n    el._x_doShow = () => {};\n\n    el._x_doHide = () => {};\n  };\n\n  function collapse(el, {\n    modifiers\n  }) {\n    let duration = modifierValue(modifiers, \"duration\", 250) / 1e3;\n    let floor = modifierValue(modifiers, \"min\", 0);\n    let fullyHide = !modifiers.includes(\"min\");\n    if (!el._x_isShown) el.style.height = `${floor}px`;\n    if (!el._x_isShown && fullyHide) el.hidden = true;\n    if (!el._x_isShown) el.style.overflow = \"hidden\";\n\n    let setFunction = (el2, styles) => {\n      let revertFunction = Alpine.setStyles(el2, styles);\n      return styles.height ? () => {} : revertFunction;\n    };\n\n    let transitionStyles = {\n      transitionProperty: \"height\",\n      transitionDuration: `${duration}s`,\n      transitionTimingFunction: \"cubic-bezier(0.4, 0.0, 0.2, 1)\"\n    };\n    el._x_transition = {\n      in(before = () => {}, after = () => {}) {\n        if (fullyHide) el.hidden = false;\n        if (fullyHide) el.style.display = null;\n        let current = el.getBoundingClientRect().height;\n        el.style.height = \"auto\";\n        let full = el.getBoundingClientRect().height;\n\n        if (current === full) {\n          current = floor;\n        }\n\n        Alpine.transition(el, Alpine.setStyles, {\n          during: transitionStyles,\n          start: {\n            height: current + \"px\"\n          },\n          end: {\n            height: full + \"px\"\n          }\n        }, () => el._x_isShown = true, () => {\n          if (el.style.height == `${full}px`) {\n            el.style.overflow = null;\n          }\n        });\n      },\n\n      out(before = () => {}, after = () => {}) {\n        let full = el.getBoundingClientRect().height;\n        Alpine.transition(el, setFunction, {\n          during: transitionStyles,\n          start: {\n            height: full + \"px\"\n          },\n          end: {\n            height: floor + \"px\"\n          }\n        }, () => el.style.overflow = \"hidden\", () => {\n          el._x_isShown = false;\n\n          if (el.style.height == `${floor}px` && fullyHide) {\n            el.style.display = \"none\";\n            el.hidden = true;\n          }\n        });\n      }\n\n    };\n  }\n}\n\nfunction modifierValue(modifiers, key, fallback) {\n  if (modifiers.indexOf(key) === -1) return fallback;\n  const rawValue = modifiers[modifiers.indexOf(key) + 1];\n  if (!rawValue) return fallback;\n\n  if (key === \"duration\") {\n    let match = rawValue.match(/([0-9]+)ms/);\n    if (match) return match[1];\n  }\n\n  if (key === \"min\") {\n    let match = rawValue.match(/([0-9]+)px/);\n    if (match) return match[1];\n  }\n\n  return rawValue;\n} // packages/collapse/builds/module.js\n\n\nvar module_default = src_default;\n\n\n//# sourceURL=webpack:///./node_modules/@alpinejs/collapse/dist/module.esm.js?");

/***/ }),

/***/ "./node_modules/@alpinejs/focus/dist/module.esm.js":
/*!*********************************************************!*\
  !*** ./node_modules/@alpinejs/focus/dist/module.esm.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return module_default; });\n// node_modules/tabbable/dist/index.esm.js\n\n/*!\n* tabbable 5.2.1\n* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE\n*/\nvar candidateSelectors = [\"input\", \"select\", \"textarea\", \"a[href]\", \"button\", \"[tabindex]\", \"audio[controls]\", \"video[controls]\", '[contenteditable]:not([contenteditable=\"false\"])', \"details>summary:first-of-type\", \"details\"];\nvar candidateSelector = /* @__PURE__ */candidateSelectors.join(\",\");\nvar matches = typeof Element === \"undefined\" ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\nvar getCandidates = function getCandidates2(el, includeContainer, filter) {\n  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));\n\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\nvar isContentEditable = function isContentEditable2(node) {\n  return node.contentEditable === \"true\";\n};\n\nvar getTabindex = function getTabindex2(node) {\n  var tabindexAttr = parseInt(node.getAttribute(\"tabindex\"), 10);\n\n  if (!isNaN(tabindexAttr)) {\n    return tabindexAttr;\n  }\n\n  if (isContentEditable(node)) {\n    return 0;\n  }\n\n  if ((node.nodeName === \"AUDIO\" || node.nodeName === \"VIDEO\" || node.nodeName === \"DETAILS\") && node.getAttribute(\"tabindex\") === null) {\n    return 0;\n  }\n\n  return node.tabIndex;\n};\n\nvar sortOrderedTabbables = function sortOrderedTabbables2(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n};\n\nvar isInput = function isInput2(node) {\n  return node.tagName === \"INPUT\";\n};\n\nvar isHiddenInput = function isHiddenInput2(node) {\n  return isInput(node) && node.type === \"hidden\";\n};\n\nvar isDetailsWithSummary = function isDetailsWithSummary2(node) {\n  var r = node.tagName === \"DETAILS\" && Array.prototype.slice.apply(node.children).some(function (child) {\n    return child.tagName === \"SUMMARY\";\n  });\n  return r;\n};\n\nvar getCheckedRadio = function getCheckedRadio2(nodes, form) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\n\nvar isTabbableRadio = function isTabbableRadio2(node) {\n  if (!node.name) {\n    return true;\n  }\n\n  var radioScope = node.form || node.ownerDocument;\n\n  var queryRadios = function queryRadios2(name) {\n    return radioScope.querySelectorAll('input[type=\"radio\"][name=\"' + name + '\"]');\n  };\n\n  var radioSet;\n\n  if (typeof window !== \"undefined\" && typeof window.CSS !== \"undefined\" && typeof window.CSS.escape === \"function\") {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      console.error(\"Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s\", err.message);\n      return false;\n    }\n  }\n\n  var checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\n\nvar isRadio = function isRadio2(node) {\n  return isInput(node) && node.type === \"radio\";\n};\n\nvar isNonTabbableRadio = function isNonTabbableRadio2(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\nvar isHidden = function isHidden2(node, displayCheck) {\n  if (getComputedStyle(node).visibility === \"hidden\") {\n    return true;\n  }\n\n  var isDirectSummary = matches.call(node, \"details>summary:first-of-type\");\n  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n\n  if (matches.call(nodeUnderDetails, \"details:not([open]) *\")) {\n    return true;\n  }\n\n  if (!displayCheck || displayCheck === \"full\") {\n    while (node) {\n      if (getComputedStyle(node).display === \"none\") {\n        return true;\n      }\n\n      node = node.parentElement;\n    }\n  } else if (displayCheck === \"non-zero-area\") {\n    var _node$getBoundingClie = node.getBoundingClientRect(),\n        width = _node$getBoundingClie.width,\n        height = _node$getBoundingClie.height;\n\n    return width === 0 && height === 0;\n  }\n\n  return false;\n};\n\nvar isDisabledFromFieldset = function isDisabledFromFieldset2(node) {\n  if (isInput(node) || node.tagName === \"SELECT\" || node.tagName === \"TEXTAREA\" || node.tagName === \"BUTTON\") {\n    var parentNode = node.parentElement;\n\n    while (parentNode) {\n      if (parentNode.tagName === \"FIELDSET\" && parentNode.disabled) {\n        for (var i = 0; i < parentNode.children.length; i++) {\n          var child = parentNode.children.item(i);\n\n          if (child.tagName === \"LEGEND\") {\n            if (child.contains(node)) {\n              return false;\n            }\n\n            return true;\n          }\n        }\n\n        return true;\n      }\n\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  return false;\n};\n\nvar isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable2(options, node) {\n  if (node.disabled || isHiddenInput(node) || isHidden(node, options.displayCheck) || isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {\n    return false;\n  }\n\n  return true;\n};\n\nvar isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable2(options, node) {\n  if (!isNodeMatchingSelectorFocusable(options, node) || isNonTabbableRadio(node) || getTabindex(node) < 0) {\n    return false;\n  }\n\n  return true;\n};\n\nvar tabbable = function tabbable2(el, options) {\n  options = options || {};\n  var regularTabbables = [];\n  var orderedTabbables = [];\n  var candidates = getCandidates(el, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));\n  candidates.forEach(function (candidate, i) {\n    var candidateTabindex = getTabindex(candidate);\n\n    if (candidateTabindex === 0) {\n      regularTabbables.push(candidate);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        node: candidate\n      });\n    }\n  });\n  var tabbableNodes = orderedTabbables.sort(sortOrderedTabbables).map(function (a) {\n    return a.node;\n  }).concat(regularTabbables);\n  return tabbableNodes;\n};\n\nvar focusable = function focusable2(el, options) {\n  options = options || {};\n  var candidates = getCandidates(el, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));\n  return candidates;\n};\n\nvar focusableCandidateSelector = /* @__PURE__ */candidateSelectors.concat(\"iframe\").join(\",\");\n\nvar isFocusable = function isFocusable2(node, options) {\n  options = options || {};\n\n  if (!node) {\n    throw new Error(\"No node provided\");\n  }\n\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n\n  return isNodeMatchingSelectorFocusable(options, node);\n}; // node_modules/focus-trap/dist/focus-trap.esm.js\n\n/*!\n* focus-trap 6.6.1\n* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE\n*/\n\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar activeFocusTraps = function () {\n  var trapQueue = [];\n  return {\n    activateTrap: function activateTrap(trap) {\n      if (trapQueue.length > 0) {\n        var activeTrap = trapQueue[trapQueue.length - 1];\n\n        if (activeTrap !== trap) {\n          activeTrap.pause();\n        }\n      }\n\n      var trapIndex = trapQueue.indexOf(trap);\n\n      if (trapIndex === -1) {\n        trapQueue.push(trap);\n      } else {\n        trapQueue.splice(trapIndex, 1);\n        trapQueue.push(trap);\n      }\n    },\n    deactivateTrap: function deactivateTrap(trap) {\n      var trapIndex = trapQueue.indexOf(trap);\n\n      if (trapIndex !== -1) {\n        trapQueue.splice(trapIndex, 1);\n      }\n\n      if (trapQueue.length > 0) {\n        trapQueue[trapQueue.length - 1].unpause();\n      }\n    }\n  };\n}();\n\nvar isSelectableInput = function isSelectableInput2(node) {\n  return node.tagName && node.tagName.toLowerCase() === \"input\" && typeof node.select === \"function\";\n};\n\nvar isEscapeEvent = function isEscapeEvent2(e) {\n  return e.key === \"Escape\" || e.key === \"Esc\" || e.keyCode === 27;\n};\n\nvar isTabEvent = function isTabEvent2(e) {\n  return e.key === \"Tab\" || e.keyCode === 9;\n};\n\nvar delay = function delay2(fn) {\n  return setTimeout(fn, 0);\n};\n\nvar findIndex = function findIndex2(arr, fn) {\n  var idx = -1;\n  arr.every(function (value, i) {\n    if (fn(value)) {\n      idx = i;\n      return false;\n    }\n\n    return true;\n  });\n  return idx;\n};\n\nvar valueOrHandler = function valueOrHandler2(value) {\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n\n  return typeof value === \"function\" ? value.apply(void 0, params) : value;\n};\n\nvar createFocusTrap = function createFocusTrap2(elements, userOptions) {\n  var doc = document;\n\n  var config = _objectSpread2({\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true\n  }, userOptions);\n\n  var state = {\n    containers: [],\n    tabbableGroups: [],\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n    delayInitialFocusTimer: void 0\n  };\n  var trap;\n\n  var getOption = function getOption2(configOverrideOptions, optionName, configOptionName) {\n    return configOverrideOptions && configOverrideOptions[optionName] !== void 0 ? configOverrideOptions[optionName] : config[configOptionName || optionName];\n  };\n\n  var containersContain = function containersContain2(element) {\n    return state.containers.some(function (container) {\n      return container.contains(element);\n    });\n  };\n\n  var getNodeForOption = function getNodeForOption2(optionName) {\n    var optionValue = config[optionName];\n\n    if (!optionValue) {\n      return null;\n    }\n\n    var node = optionValue;\n\n    if (typeof optionValue === \"string\") {\n      node = doc.querySelector(optionValue);\n\n      if (!node) {\n        throw new Error(\"`\".concat(optionName, \"` refers to no known node\"));\n      }\n    }\n\n    if (typeof optionValue === \"function\") {\n      node = optionValue();\n\n      if (!node) {\n        throw new Error(\"`\".concat(optionName, \"` did not return a node\"));\n      }\n    }\n\n    return node;\n  };\n\n  var getInitialFocusNode = function getInitialFocusNode2() {\n    var node;\n\n    if (getOption({}, \"initialFocus\") === false) {\n      return false;\n    }\n\n    if (getNodeForOption(\"initialFocus\") !== null) {\n      node = getNodeForOption(\"initialFocus\");\n    } else if (containersContain(doc.activeElement)) {\n      node = doc.activeElement;\n    } else {\n      var firstTabbableGroup = state.tabbableGroups[0];\n      var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n      node = firstTabbableNode || getNodeForOption(\"fallbackFocus\");\n    }\n\n    if (!node) {\n      throw new Error(\"Your focus-trap needs to have at least one focusable element\");\n    }\n\n    return node;\n  };\n\n  var updateTabbableNodes = function updateTabbableNodes2() {\n    state.tabbableGroups = state.containers.map(function (container) {\n      var tabbableNodes = tabbable(container);\n\n      if (tabbableNodes.length > 0) {\n        return {\n          container,\n          firstTabbableNode: tabbableNodes[0],\n          lastTabbableNode: tabbableNodes[tabbableNodes.length - 1]\n        };\n      }\n\n      return void 0;\n    }).filter(function (group) {\n      return !!group;\n    });\n\n    if (state.tabbableGroups.length <= 0 && !getNodeForOption(\"fallbackFocus\")) {\n      throw new Error(\"Your focus-trap must have at least one container with at least one tabbable node in it at all times\");\n    }\n  };\n\n  var tryFocus = function tryFocus2(node) {\n    if (node === false) {\n      return;\n    }\n\n    if (node === doc.activeElement) {\n      return;\n    }\n\n    if (!node || !node.focus) {\n      tryFocus2(getInitialFocusNode());\n      return;\n    }\n\n    node.focus({\n      preventScroll: !!config.preventScroll\n    });\n    state.mostRecentlyFocusedNode = node;\n\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n\n  var getReturnFocusNode = function getReturnFocusNode2(previousActiveElement) {\n    var node = getNodeForOption(\"setReturnFocus\");\n    return node ? node : previousActiveElement;\n  };\n\n  var checkPointerDown = function checkPointerDown2(e) {\n    if (containersContain(e.target)) {\n      return;\n    }\n\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      trap.deactivate({\n        returnFocus: config.returnFocusOnDeactivate && !isFocusable(e.target)\n      });\n      return;\n    }\n\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n\n    e.preventDefault();\n  };\n\n  var checkFocusIn = function checkFocusIn2(e) {\n    var targetContained = containersContain(e.target);\n\n    if (targetContained || e.target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = e.target;\n      }\n    } else {\n      e.stopImmediatePropagation();\n      tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n    }\n  };\n\n  var checkTab = function checkTab2(e) {\n    updateTabbableNodes();\n    var destinationNode = null;\n\n    if (state.tabbableGroups.length > 0) {\n      var containerIndex = findIndex(state.tabbableGroups, function (_ref) {\n        var container = _ref.container;\n        return container.contains(e.target);\n      });\n\n      if (containerIndex < 0) {\n        if (e.shiftKey) {\n          destinationNode = state.tabbableGroups[state.tabbableGroups.length - 1].lastTabbableNode;\n        } else {\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (e.shiftKey) {\n        var startOfGroupIndex = findIndex(state.tabbableGroups, function (_ref2) {\n          var firstTabbableNode = _ref2.firstTabbableNode;\n          return e.target === firstTabbableNode;\n        });\n\n        if (startOfGroupIndex < 0 && state.tabbableGroups[containerIndex].container === e.target) {\n          startOfGroupIndex = containerIndex;\n        }\n\n        if (startOfGroupIndex >= 0) {\n          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;\n          var destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = destinationGroup.lastTabbableNode;\n        }\n      } else {\n        var lastOfGroupIndex = findIndex(state.tabbableGroups, function (_ref3) {\n          var lastTabbableNode = _ref3.lastTabbableNode;\n          return e.target === lastTabbableNode;\n        });\n\n        if (lastOfGroupIndex < 0 && state.tabbableGroups[containerIndex].container === e.target) {\n          lastOfGroupIndex = containerIndex;\n        }\n\n        if (lastOfGroupIndex >= 0) {\n          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;\n\n          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];\n          destinationNode = _destinationGroup.firstTabbableNode;\n        }\n      }\n    } else {\n      destinationNode = getNodeForOption(\"fallbackFocus\");\n    }\n\n    if (destinationNode) {\n      e.preventDefault();\n      tryFocus(destinationNode);\n    }\n  };\n\n  var checkKey = function checkKey2(e) {\n    if (isEscapeEvent(e) && valueOrHandler(config.escapeDeactivates) !== false) {\n      e.preventDefault();\n      trap.deactivate();\n      return;\n    }\n\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  };\n\n  var checkClick = function checkClick2(e) {\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n\n    if (containersContain(e.target)) {\n      return;\n    }\n\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  };\n\n  var addListeners = function addListeners2() {\n    if (!state.active) {\n      return;\n    }\n\n    activeFocusTraps.activateTrap(trap);\n    state.delayInitialFocusTimer = config.delayInitialFocus ? delay(function () {\n      tryFocus(getInitialFocusNode());\n    }) : tryFocus(getInitialFocusNode());\n    doc.addEventListener(\"focusin\", checkFocusIn, true);\n    doc.addEventListener(\"mousedown\", checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener(\"touchstart\", checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener(\"click\", checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener(\"keydown\", checkKey, {\n      capture: true,\n      passive: false\n    });\n    return trap;\n  };\n\n  var removeListeners = function removeListeners2() {\n    if (!state.active) {\n      return;\n    }\n\n    doc.removeEventListener(\"focusin\", checkFocusIn, true);\n    doc.removeEventListener(\"mousedown\", checkPointerDown, true);\n    doc.removeEventListener(\"touchstart\", checkPointerDown, true);\n    doc.removeEventListener(\"click\", checkClick, true);\n    doc.removeEventListener(\"keydown\", checkKey, true);\n    return trap;\n  };\n\n  trap = {\n    activate: function activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n\n      var onActivate = getOption(activateOptions, \"onActivate\");\n      var onPostActivate = getOption(activateOptions, \"onPostActivate\");\n      var checkCanFocusTrap = getOption(activateOptions, \"checkCanFocusTrap\");\n\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n\n      if (onActivate) {\n        onActivate();\n      }\n\n      var finishActivation = function finishActivation2() {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n\n        addListeners();\n\n        if (onPostActivate) {\n          onPostActivate();\n        }\n      };\n\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(finishActivation, finishActivation);\n        return this;\n      }\n\n      finishActivation();\n      return this;\n    },\n    deactivate: function deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n\n      clearTimeout(state.delayInitialFocusTimer);\n      state.delayInitialFocusTimer = void 0;\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n      activeFocusTraps.deactivateTrap(trap);\n      var onDeactivate = getOption(deactivateOptions, \"onDeactivate\");\n      var onPostDeactivate = getOption(deactivateOptions, \"onPostDeactivate\");\n      var checkCanReturnFocus = getOption(deactivateOptions, \"checkCanReturnFocus\");\n\n      if (onDeactivate) {\n        onDeactivate();\n      }\n\n      var returnFocus = getOption(deactivateOptions, \"returnFocus\", \"returnFocusOnDeactivate\");\n\n      var finishDeactivation = function finishDeactivation2() {\n        delay(function () {\n          if (returnFocus) {\n            tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n\n          if (onPostDeactivate) {\n            onPostDeactivate();\n          }\n        });\n      };\n\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation)).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n\n      finishDeactivation();\n      return this;\n    },\n    pause: function pause() {\n      if (state.paused || !state.active) {\n        return this;\n      }\n\n      state.paused = true;\n      removeListeners();\n      return this;\n    },\n    unpause: function unpause() {\n      if (!state.paused || !state.active) {\n        return this;\n      }\n\n      state.paused = false;\n      updateTabbableNodes();\n      addListeners();\n      return this;\n    },\n    updateContainerElements: function updateContainerElements(containerElements) {\n      var elementsAsArray = [].concat(containerElements).filter(Boolean);\n      state.containers = elementsAsArray.map(function (element) {\n        return typeof element === \"string\" ? doc.querySelector(element) : element;\n      });\n\n      if (state.active) {\n        updateTabbableNodes();\n      }\n\n      return this;\n    }\n  };\n  trap.updateContainerElements(elements);\n  return trap;\n}; // packages/focus/src/index.js\n\n\nfunction src_default(Alpine) {\n  let lastFocused;\n  let currentFocused;\n  window.addEventListener(\"focusin\", () => {\n    lastFocused = currentFocused;\n    currentFocused = document.activeElement;\n  });\n  Alpine.magic(\"focus\", el => {\n    let within = el;\n    return {\n      __noscroll: false,\n      __wrapAround: false,\n\n      within(el2) {\n        within = el2;\n        return this;\n      },\n\n      withoutScrolling() {\n        this.__noscroll = true;\n        return this;\n      },\n\n      noscroll() {\n        this.__noscroll = true;\n        return this;\n      },\n\n      withWrapAround() {\n        this.__wrapAround = true;\n        return this;\n      },\n\n      wrap() {\n        return this.withWrapAround();\n      },\n\n      focusable(el2) {\n        return isFocusable(el2);\n      },\n\n      previouslyFocused() {\n        return lastFocused;\n      },\n\n      lastFocused() {\n        return lastFocused;\n      },\n\n      focused() {\n        return currentFocused;\n      },\n\n      focusables() {\n        if (Array.isArray(within)) return within;\n        return focusable(within, {\n          displayCheck: \"none\"\n        });\n      },\n\n      all() {\n        return this.focusables();\n      },\n\n      isFirst(el2) {\n        let els = this.all();\n        return els[0] && els[0].isSameNode(el2);\n      },\n\n      isLast(el2) {\n        let els = this.all();\n        return els.length && els.slice(-1)[0].isSameNode(el2);\n      },\n\n      getFirst() {\n        return this.all()[0];\n      },\n\n      getLast() {\n        return this.all().slice(-1)[0];\n      },\n\n      getNext() {\n        let list = this.all();\n        let current = document.activeElement;\n        if (list.indexOf(current) === -1) return;\n\n        if (this.__wrapAround && list.indexOf(current) === list.length - 1) {\n          return list[0];\n        }\n\n        return list[list.indexOf(current) + 1];\n      },\n\n      getPrevious() {\n        let list = this.all();\n        let current = document.activeElement;\n        if (list.indexOf(current) === -1) return;\n\n        if (this.__wrapAround && list.indexOf(current) === 0) {\n          return list.slice(-1)[0];\n        }\n\n        return list[list.indexOf(current) - 1];\n      },\n\n      first() {\n        this.focus(this.getFirst());\n      },\n\n      last() {\n        this.focus(this.getLast());\n      },\n\n      next() {\n        this.focus(this.getNext());\n      },\n\n      previous() {\n        this.focus(this.getPrevious());\n      },\n\n      prev() {\n        return this.previous();\n      },\n\n      focus(el2) {\n        if (!el2) return;\n        setTimeout(() => {\n          if (!el2.hasAttribute(\"tabindex\")) el2.setAttribute(\"tabindex\", \"0\");\n          el2.focus({\n            preventScroll: this._noscroll\n          });\n        });\n      }\n\n    };\n  });\n  Alpine.directive(\"trap\", Alpine.skipDuringClone((el, {\n    expression,\n    modifiers\n  }, {\n    effect,\n    evaluateLater,\n    cleanup\n  }) => {\n    let evaluator = evaluateLater(expression);\n    let oldValue = false;\n    let trap = createFocusTrap(el, {\n      escapeDeactivates: false,\n      allowOutsideClick: true,\n      fallbackFocus: () => el\n    });\n\n    let undoInert = () => {};\n\n    let undoDisableScrolling = () => {};\n\n    const releaseFocus = () => {\n      undoInert();\n\n      undoInert = () => {};\n\n      undoDisableScrolling();\n\n      undoDisableScrolling = () => {};\n\n      trap.deactivate({\n        returnFocus: !modifiers.includes(\"noreturn\")\n      });\n    };\n\n    effect(() => evaluator(value => {\n      if (oldValue === value) return;\n\n      if (value && !oldValue) {\n        setTimeout(() => {\n          if (modifiers.includes(\"inert\")) undoInert = setInert(el);\n          if (modifiers.includes(\"noscroll\")) undoDisableScrolling = disableScrolling();\n          trap.activate();\n        });\n      }\n\n      if (!value && oldValue) {\n        releaseFocus();\n      }\n\n      oldValue = !!value;\n    }));\n    cleanup(releaseFocus);\n  }, (el, {\n    expression,\n    modifiers\n  }, {\n    evaluate\n  }) => {\n    if (modifiers.includes(\"inert\") && evaluate(expression)) setInert(el);\n  }));\n}\n\nfunction setInert(el) {\n  let undos = [];\n  crawlSiblingsUp(el, sibling => {\n    let cache = sibling.hasAttribute(\"aria-hidden\");\n    sibling.setAttribute(\"aria-hidden\", \"true\");\n    undos.push(() => cache || sibling.removeAttribute(\"aria-hidden\"));\n  });\n  return () => {\n    while (undos.length) undos.pop()();\n  };\n}\n\nfunction crawlSiblingsUp(el, callback) {\n  if (el.isSameNode(document.body) || !el.parentNode) return;\n  Array.from(el.parentNode.children).forEach(sibling => {\n    if (!sibling.isSameNode(el)) callback(sibling);\n    crawlSiblingsUp(el.parentNode, callback);\n  });\n}\n\nfunction disableScrolling() {\n  let overflow = document.documentElement.style.overflow;\n  let paddingRight = document.documentElement.style.paddingRight;\n  let scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;\n  document.documentElement.style.overflow = \"hidden\";\n  document.documentElement.style.paddingRight = `${scrollbarWidth}px`;\n  return () => {\n    document.documentElement.style.overflow = overflow;\n    document.documentElement.style.paddingRight = paddingRight;\n  };\n} // packages/focus/builds/module.js\n\n\nvar module_default = src_default;\n\n\n//# sourceURL=webpack:///./node_modules/@alpinejs/focus/dist/module.esm.js?");

/***/ }),

/***/ "./node_modules/@alpinejs/intersect/dist/module.esm.js":
/*!*************************************************************!*\
  !*** ./node_modules/@alpinejs/intersect/dist/module.esm.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return module_default; });\n// packages/intersect/src/index.js\nfunction src_default(Alpine) {\n  Alpine.directive(\"intersect\", (el, {\n    value,\n    expression,\n    modifiers\n  }, {\n    evaluateLater,\n    cleanup\n  }) => {\n    let evaluate = evaluateLater(expression);\n    let options = {\n      rootMargin: getRootMargin(modifiers),\n      threshold: getThreshhold(modifiers)\n    };\n    let observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting === (value === \"leave\")) return;\n        evaluate();\n        modifiers.includes(\"once\") && observer.disconnect();\n      });\n    }, options);\n    observer.observe(el);\n    cleanup(() => {\n      observer.disconnect();\n    });\n  });\n}\n\nfunction getThreshhold(modifiers) {\n  if (modifiers.includes(\"full\")) return 0.99;\n  if (modifiers.includes(\"half\")) return 0.5;\n  if (!modifiers.includes(\"threshold\")) return 0;\n  let threshold = modifiers[modifiers.indexOf(\"threshold\") + 1];\n  if (threshold === \"100\") return 1;\n  if (threshold === \"0\") return 0;\n  return Number(`.${threshold}`);\n}\n\nfunction getLengthValue(rawValue) {\n  let match = rawValue.match(/^(-?[0-9]+)(px|%)?$/);\n  return match ? match[1] + (match[2] || \"px\") : void 0;\n}\n\nfunction getRootMargin(modifiers) {\n  const key = \"margin\";\n  const fallback = \"0px 0px 0px 0px\";\n  const index = modifiers.indexOf(key);\n  if (index === -1) return fallback;\n  let values = [];\n\n  for (let i = 1; i < 5; i++) {\n    values.push(getLengthValue(modifiers[index + i] || \"\"));\n  }\n\n  values = values.filter(v => v !== void 0);\n  return values.length ? values.join(\" \").trim() : fallback;\n} // packages/intersect/builds/module.js\n\n\nvar module_default = src_default;\n\n\n//# sourceURL=webpack:///./node_modules/@alpinejs/intersect/dist/module.esm.js?");

/***/ }),

/***/ "./node_modules/alpinejs/dist/module.esm.js":
/*!**************************************************!*\
  !*** ./node_modules/alpinejs/dist/module.esm.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return module_default; });\n// packages/alpinejs/src/scheduler.js\nvar flushPending = false;\nvar flushing = false;\nvar queue = [];\n\nfunction scheduler(callback) {\n  queueJob(callback);\n}\n\nfunction queueJob(job) {\n  if (!queue.includes(job)) queue.push(job);\n  queueFlush();\n}\n\nfunction dequeueJob(job) {\n  let index = queue.indexOf(job);\n  if (index !== -1) queue.splice(index, 1);\n}\n\nfunction queueFlush() {\n  if (!flushing && !flushPending) {\n    flushPending = true;\n    queueMicrotask(flushJobs);\n  }\n}\n\nfunction flushJobs() {\n  flushPending = false;\n  flushing = true;\n\n  for (let i = 0; i < queue.length; i++) {\n    queue[i]();\n  }\n\n  queue.length = 0;\n  flushing = false;\n} // packages/alpinejs/src/reactivity.js\n\n\nvar reactive;\nvar effect;\nvar release;\nvar raw;\nvar shouldSchedule = true;\n\nfunction disableEffectScheduling(callback) {\n  shouldSchedule = false;\n  callback();\n  shouldSchedule = true;\n}\n\nfunction setReactivityEngine(engine) {\n  reactive = engine.reactive;\n  release = engine.release;\n\n  effect = callback => engine.effect(callback, {\n    scheduler: task => {\n      if (shouldSchedule) {\n        scheduler(task);\n      } else {\n        task();\n      }\n    }\n  });\n\n  raw = engine.raw;\n}\n\nfunction overrideEffect(override) {\n  effect = override;\n}\n\nfunction elementBoundEffect(el) {\n  let cleanup2 = () => {};\n\n  let wrappedEffect = callback => {\n    let effectReference = effect(callback);\n\n    if (!el._x_effects) {\n      el._x_effects = new Set();\n\n      el._x_runEffects = () => {\n        el._x_effects.forEach(i => i());\n      };\n    }\n\n    el._x_effects.add(effectReference);\n\n    cleanup2 = () => {\n      if (effectReference === void 0) return;\n\n      el._x_effects.delete(effectReference);\n\n      release(effectReference);\n    };\n\n    return effectReference;\n  };\n\n  return [wrappedEffect, () => {\n    cleanup2();\n  }];\n} // packages/alpinejs/src/mutation.js\n\n\nvar onAttributeAddeds = [];\nvar onElRemoveds = [];\nvar onElAddeds = [];\n\nfunction onElAdded(callback) {\n  onElAddeds.push(callback);\n}\n\nfunction onElRemoved(el, callback) {\n  if (typeof callback === \"function\") {\n    if (!el._x_cleanups) el._x_cleanups = [];\n\n    el._x_cleanups.push(callback);\n  } else {\n    callback = el;\n    onElRemoveds.push(callback);\n  }\n}\n\nfunction onAttributesAdded(callback) {\n  onAttributeAddeds.push(callback);\n}\n\nfunction onAttributeRemoved(el, name, callback) {\n  if (!el._x_attributeCleanups) el._x_attributeCleanups = {};\n  if (!el._x_attributeCleanups[name]) el._x_attributeCleanups[name] = [];\n\n  el._x_attributeCleanups[name].push(callback);\n}\n\nfunction cleanupAttributes(el, names) {\n  if (!el._x_attributeCleanups) return;\n  Object.entries(el._x_attributeCleanups).forEach(([name, value]) => {\n    if (names === void 0 || names.includes(name)) {\n      value.forEach(i => i());\n      delete el._x_attributeCleanups[name];\n    }\n  });\n}\n\nvar observer = new MutationObserver(onMutate);\nvar currentlyObserving = false;\n\nfunction startObservingMutations() {\n  observer.observe(document, {\n    subtree: true,\n    childList: true,\n    attributes: true,\n    attributeOldValue: true\n  });\n  currentlyObserving = true;\n}\n\nfunction stopObservingMutations() {\n  flushObserver();\n  observer.disconnect();\n  currentlyObserving = false;\n}\n\nvar recordQueue = [];\nvar willProcessRecordQueue = false;\n\nfunction flushObserver() {\n  recordQueue = recordQueue.concat(observer.takeRecords());\n\n  if (recordQueue.length && !willProcessRecordQueue) {\n    willProcessRecordQueue = true;\n    queueMicrotask(() => {\n      processRecordQueue();\n      willProcessRecordQueue = false;\n    });\n  }\n}\n\nfunction processRecordQueue() {\n  onMutate(recordQueue);\n  recordQueue.length = 0;\n}\n\nfunction mutateDom(callback) {\n  if (!currentlyObserving) return callback();\n  stopObservingMutations();\n  let result = callback();\n  startObservingMutations();\n  return result;\n}\n\nvar isCollecting = false;\nvar deferredMutations = [];\n\nfunction deferMutations() {\n  isCollecting = true;\n}\n\nfunction flushAndStopDeferringMutations() {\n  isCollecting = false;\n  onMutate(deferredMutations);\n  deferredMutations = [];\n}\n\nfunction onMutate(mutations) {\n  if (isCollecting) {\n    deferredMutations = deferredMutations.concat(mutations);\n    return;\n  }\n\n  let addedNodes = [];\n  let removedNodes = [];\n  let addedAttributes = new Map();\n  let removedAttributes = new Map();\n\n  for (let i = 0; i < mutations.length; i++) {\n    if (mutations[i].target._x_ignoreMutationObserver) continue;\n\n    if (mutations[i].type === \"childList\") {\n      mutations[i].addedNodes.forEach(node => node.nodeType === 1 && addedNodes.push(node));\n      mutations[i].removedNodes.forEach(node => node.nodeType === 1 && removedNodes.push(node));\n    }\n\n    if (mutations[i].type === \"attributes\") {\n      let el = mutations[i].target;\n      let name = mutations[i].attributeName;\n      let oldValue = mutations[i].oldValue;\n\n      let add2 = () => {\n        if (!addedAttributes.has(el)) addedAttributes.set(el, []);\n        addedAttributes.get(el).push({\n          name,\n          value: el.getAttribute(name)\n        });\n      };\n\n      let remove = () => {\n        if (!removedAttributes.has(el)) removedAttributes.set(el, []);\n        removedAttributes.get(el).push(name);\n      };\n\n      if (el.hasAttribute(name) && oldValue === null) {\n        add2();\n      } else if (el.hasAttribute(name)) {\n        remove();\n        add2();\n      } else {\n        remove();\n      }\n    }\n  }\n\n  removedAttributes.forEach((attrs, el) => {\n    cleanupAttributes(el, attrs);\n  });\n  addedAttributes.forEach((attrs, el) => {\n    onAttributeAddeds.forEach(i => i(el, attrs));\n  });\n\n  for (let node of removedNodes) {\n    if (addedNodes.includes(node)) continue;\n    onElRemoveds.forEach(i => i(node));\n\n    if (node._x_cleanups) {\n      while (node._x_cleanups.length) node._x_cleanups.pop()();\n    }\n  }\n\n  addedNodes.forEach(node => {\n    node._x_ignoreSelf = true;\n    node._x_ignore = true;\n  });\n\n  for (let node of addedNodes) {\n    if (removedNodes.includes(node)) continue;\n    if (!node.isConnected) continue;\n    delete node._x_ignoreSelf;\n    delete node._x_ignore;\n    onElAddeds.forEach(i => i(node));\n    node._x_ignore = true;\n    node._x_ignoreSelf = true;\n  }\n\n  addedNodes.forEach(node => {\n    delete node._x_ignoreSelf;\n    delete node._x_ignore;\n  });\n  addedNodes = null;\n  removedNodes = null;\n  addedAttributes = null;\n  removedAttributes = null;\n} // packages/alpinejs/src/scope.js\n\n\nfunction scope(node) {\n  return mergeProxies(closestDataStack(node));\n}\n\nfunction addScopeToNode(node, data2, referenceNode) {\n  node._x_dataStack = [data2, ...closestDataStack(referenceNode || node)];\n  return () => {\n    node._x_dataStack = node._x_dataStack.filter(i => i !== data2);\n  };\n}\n\nfunction refreshScope(element, scope2) {\n  let existingScope = element._x_dataStack[0];\n  Object.entries(scope2).forEach(([key, value]) => {\n    existingScope[key] = value;\n  });\n}\n\nfunction closestDataStack(node) {\n  if (node._x_dataStack) return node._x_dataStack;\n\n  if (typeof ShadowRoot === \"function\" && node instanceof ShadowRoot) {\n    return closestDataStack(node.host);\n  }\n\n  if (!node.parentNode) {\n    return [];\n  }\n\n  return closestDataStack(node.parentNode);\n}\n\nfunction mergeProxies(objects) {\n  let thisProxy = new Proxy({}, {\n    ownKeys: () => {\n      return Array.from(new Set(objects.flatMap(i => Object.keys(i))));\n    },\n    has: (target, name) => {\n      return objects.some(obj => obj.hasOwnProperty(name));\n    },\n    get: (target, name) => {\n      return (objects.find(obj => {\n        if (obj.hasOwnProperty(name)) {\n          let descriptor = Object.getOwnPropertyDescriptor(obj, name);\n\n          if (descriptor.get && descriptor.get._x_alreadyBound || descriptor.set && descriptor.set._x_alreadyBound) {\n            return true;\n          }\n\n          if ((descriptor.get || descriptor.set) && descriptor.enumerable) {\n            let getter = descriptor.get;\n            let setter = descriptor.set;\n            let property = descriptor;\n            getter = getter && getter.bind(thisProxy);\n            setter = setter && setter.bind(thisProxy);\n            if (getter) getter._x_alreadyBound = true;\n            if (setter) setter._x_alreadyBound = true;\n            Object.defineProperty(obj, name, { ...property,\n              get: getter,\n              set: setter\n            });\n          }\n\n          return true;\n        }\n\n        return false;\n      }) || {})[name];\n    },\n    set: (target, name, value) => {\n      let closestObjectWithKey = objects.find(obj => obj.hasOwnProperty(name));\n\n      if (closestObjectWithKey) {\n        closestObjectWithKey[name] = value;\n      } else {\n        objects[objects.length - 1][name] = value;\n      }\n\n      return true;\n    }\n  });\n  return thisProxy;\n} // packages/alpinejs/src/interceptor.js\n\n\nfunction initInterceptors(data2) {\n  let isObject2 = val => typeof val === \"object\" && !Array.isArray(val) && val !== null;\n\n  let recurse = (obj, basePath = \"\") => {\n    Object.entries(Object.getOwnPropertyDescriptors(obj)).forEach(([key, {\n      value,\n      enumerable\n    }]) => {\n      if (enumerable === false || value === void 0) return;\n      let path = basePath === \"\" ? key : `${basePath}.${key}`;\n\n      if (typeof value === \"object\" && value !== null && value._x_interceptor) {\n        obj[key] = value.initialize(data2, path, key);\n      } else {\n        if (isObject2(value) && value !== obj && !(value instanceof Element)) {\n          recurse(value, path);\n        }\n      }\n    });\n  };\n\n  return recurse(data2);\n}\n\nfunction interceptor(callback, mutateObj = () => {}) {\n  let obj = {\n    initialValue: void 0,\n    _x_interceptor: true,\n\n    initialize(data2, path, key) {\n      return callback(this.initialValue, () => get(data2, path), value => set(data2, path, value), path, key);\n    }\n\n  };\n  mutateObj(obj);\n  return initialValue => {\n    if (typeof initialValue === \"object\" && initialValue !== null && initialValue._x_interceptor) {\n      let initialize = obj.initialize.bind(obj);\n\n      obj.initialize = (data2, path, key) => {\n        let innerValue = initialValue.initialize(data2, path, key);\n        obj.initialValue = innerValue;\n        return initialize(data2, path, key);\n      };\n    } else {\n      obj.initialValue = initialValue;\n    }\n\n    return obj;\n  };\n}\n\nfunction get(obj, path) {\n  return path.split(\".\").reduce((carry, segment) => carry[segment], obj);\n}\n\nfunction set(obj, path, value) {\n  if (typeof path === \"string\") path = path.split(\".\");\n  if (path.length === 1) obj[path[0]] = value;else if (path.length === 0) throw error;else {\n    if (obj[path[0]]) return set(obj[path[0]], path.slice(1), value);else {\n      obj[path[0]] = {};\n      return set(obj[path[0]], path.slice(1), value);\n    }\n  }\n} // packages/alpinejs/src/magics.js\n\n\nvar magics = {};\n\nfunction magic(name, callback) {\n  magics[name] = callback;\n}\n\nfunction injectMagics(obj, el) {\n  Object.entries(magics).forEach(([name, callback]) => {\n    Object.defineProperty(obj, `$${name}`, {\n      get() {\n        let [utilities, cleanup2] = getElementBoundUtilities(el);\n        utilities = {\n          interceptor,\n          ...utilities\n        };\n        onElRemoved(el, cleanup2);\n        return callback(el, utilities);\n      },\n\n      enumerable: false\n    });\n  });\n  return obj;\n} // packages/alpinejs/src/utils/error.js\n\n\nfunction tryCatch(el, expression, callback, ...args) {\n  try {\n    return callback(...args);\n  } catch (e) {\n    handleError(e, el, expression);\n  }\n}\n\nfunction handleError(error2, el, expression = void 0) {\n  Object.assign(error2, {\n    el,\n    expression\n  });\n  console.warn(`Alpine Expression Error: ${error2.message}\n\n${expression ? 'Expression: \"' + expression + '\"\\n\\n' : \"\"}`, el);\n  setTimeout(() => {\n    throw error2;\n  }, 0);\n} // packages/alpinejs/src/evaluator.js\n\n\nvar shouldAutoEvaluateFunctions = true;\n\nfunction dontAutoEvaluateFunctions(callback) {\n  let cache = shouldAutoEvaluateFunctions;\n  shouldAutoEvaluateFunctions = false;\n  callback();\n  shouldAutoEvaluateFunctions = cache;\n}\n\nfunction evaluate(el, expression, extras = {}) {\n  let result;\n  evaluateLater(el, expression)(value => result = value, extras);\n  return result;\n}\n\nfunction evaluateLater(...args) {\n  return theEvaluatorFunction(...args);\n}\n\nvar theEvaluatorFunction = normalEvaluator;\n\nfunction setEvaluator(newEvaluator) {\n  theEvaluatorFunction = newEvaluator;\n}\n\nfunction normalEvaluator(el, expression) {\n  let overriddenMagics = {};\n  injectMagics(overriddenMagics, el);\n  let dataStack = [overriddenMagics, ...closestDataStack(el)];\n\n  if (typeof expression === \"function\") {\n    return generateEvaluatorFromFunction(dataStack, expression);\n  }\n\n  let evaluator = generateEvaluatorFromString(dataStack, expression, el);\n  return tryCatch.bind(null, el, expression, evaluator);\n}\n\nfunction generateEvaluatorFromFunction(dataStack, func) {\n  return (receiver = () => {}, {\n    scope: scope2 = {},\n    params = []\n  } = {}) => {\n    let result = func.apply(mergeProxies([scope2, ...dataStack]), params);\n    runIfTypeOfFunction(receiver, result);\n  };\n}\n\nvar evaluatorMemo = {};\n\nfunction generateFunctionFromString(expression, el) {\n  if (evaluatorMemo[expression]) {\n    return evaluatorMemo[expression];\n  }\n\n  let AsyncFunction = Object.getPrototypeOf(async function () {}).constructor;\n  let rightSideSafeExpression = /^[\\n\\s]*if.*\\(.*\\)/.test(expression) || /^(let|const)\\s/.test(expression) ? `(() => { ${expression} })()` : expression;\n\n  const safeAsyncFunction = () => {\n    try {\n      return new AsyncFunction([\"__self\", \"scope\"], `with (scope) { __self.result = ${rightSideSafeExpression} }; __self.finished = true; return __self.result;`);\n    } catch (error2) {\n      handleError(error2, el, expression);\n      return Promise.resolve();\n    }\n  };\n\n  let func = safeAsyncFunction();\n  evaluatorMemo[expression] = func;\n  return func;\n}\n\nfunction generateEvaluatorFromString(dataStack, expression, el) {\n  let func = generateFunctionFromString(expression, el);\n  return (receiver = () => {}, {\n    scope: scope2 = {},\n    params = []\n  } = {}) => {\n    func.result = void 0;\n    func.finished = false;\n    let completeScope = mergeProxies([scope2, ...dataStack]);\n\n    if (typeof func === \"function\") {\n      let promise = func(func, completeScope).catch(error2 => handleError(error2, el, expression));\n\n      if (func.finished) {\n        runIfTypeOfFunction(receiver, func.result, completeScope, params, el);\n        func.result = void 0;\n      } else {\n        promise.then(result => {\n          runIfTypeOfFunction(receiver, result, completeScope, params, el);\n        }).catch(error2 => handleError(error2, el, expression)).finally(() => func.result = void 0);\n      }\n    }\n  };\n}\n\nfunction runIfTypeOfFunction(receiver, value, scope2, params, el) {\n  if (shouldAutoEvaluateFunctions && typeof value === \"function\") {\n    let result = value.apply(scope2, params);\n\n    if (result instanceof Promise) {\n      result.then(i => runIfTypeOfFunction(receiver, i, scope2, params)).catch(error2 => handleError(error2, el, value));\n    } else {\n      receiver(result);\n    }\n  } else {\n    receiver(value);\n  }\n} // packages/alpinejs/src/directives.js\n\n\nvar prefixAsString = \"x-\";\n\nfunction prefix(subject = \"\") {\n  return prefixAsString + subject;\n}\n\nfunction setPrefix(newPrefix) {\n  prefixAsString = newPrefix;\n}\n\nvar directiveHandlers = {};\n\nfunction directive(name, callback) {\n  directiveHandlers[name] = callback;\n}\n\nfunction directives(el, attributes, originalAttributeOverride) {\n  let transformedAttributeMap = {};\n  let directives2 = Array.from(attributes).map(toTransformedAttributes((newName, oldName) => transformedAttributeMap[newName] = oldName)).filter(outNonAlpineAttributes).map(toParsedDirectives(transformedAttributeMap, originalAttributeOverride)).sort(byPriority);\n  return directives2.map(directive2 => {\n    return getDirectiveHandler(el, directive2);\n  });\n}\n\nfunction attributesOnly(attributes) {\n  return Array.from(attributes).map(toTransformedAttributes()).filter(attr => !outNonAlpineAttributes(attr));\n}\n\nvar isDeferringHandlers = false;\nvar directiveHandlerStacks = new Map();\nvar currentHandlerStackKey = Symbol();\n\nfunction deferHandlingDirectives(callback) {\n  isDeferringHandlers = true;\n  let key = Symbol();\n  currentHandlerStackKey = key;\n  directiveHandlerStacks.set(key, []);\n\n  let flushHandlers = () => {\n    while (directiveHandlerStacks.get(key).length) directiveHandlerStacks.get(key).shift()();\n\n    directiveHandlerStacks.delete(key);\n  };\n\n  let stopDeferring = () => {\n    isDeferringHandlers = false;\n    flushHandlers();\n  };\n\n  callback(flushHandlers);\n  stopDeferring();\n}\n\nfunction getElementBoundUtilities(el) {\n  let cleanups = [];\n\n  let cleanup2 = callback => cleanups.push(callback);\n\n  let [effect3, cleanupEffect] = elementBoundEffect(el);\n  cleanups.push(cleanupEffect);\n  let utilities = {\n    Alpine: alpine_default,\n    effect: effect3,\n    cleanup: cleanup2,\n    evaluateLater: evaluateLater.bind(evaluateLater, el),\n    evaluate: evaluate.bind(evaluate, el)\n  };\n\n  let doCleanup = () => cleanups.forEach(i => i());\n\n  return [utilities, doCleanup];\n}\n\nfunction getDirectiveHandler(el, directive2) {\n  let noop = () => {};\n\n  let handler3 = directiveHandlers[directive2.type] || noop;\n  let [utilities, cleanup2] = getElementBoundUtilities(el);\n  onAttributeRemoved(el, directive2.original, cleanup2);\n\n  let fullHandler = () => {\n    if (el._x_ignore || el._x_ignoreSelf) return;\n    handler3.inline && handler3.inline(el, directive2, utilities);\n    handler3 = handler3.bind(handler3, el, directive2, utilities);\n    isDeferringHandlers ? directiveHandlerStacks.get(currentHandlerStackKey).push(handler3) : handler3();\n  };\n\n  fullHandler.runCleanups = cleanup2;\n  return fullHandler;\n}\n\nvar startingWith = (subject, replacement) => ({\n  name,\n  value\n}) => {\n  if (name.startsWith(subject)) name = name.replace(subject, replacement);\n  return {\n    name,\n    value\n  };\n};\n\nvar into = i => i;\n\nfunction toTransformedAttributes(callback = () => {}) {\n  return ({\n    name,\n    value\n  }) => {\n    let {\n      name: newName,\n      value: newValue\n    } = attributeTransformers.reduce((carry, transform) => {\n      return transform(carry);\n    }, {\n      name,\n      value\n    });\n    if (newName !== name) callback(newName, name);\n    return {\n      name: newName,\n      value: newValue\n    };\n  };\n}\n\nvar attributeTransformers = [];\n\nfunction mapAttributes(callback) {\n  attributeTransformers.push(callback);\n}\n\nfunction outNonAlpineAttributes({\n  name\n}) {\n  return alpineAttributeRegex().test(name);\n}\n\nvar alpineAttributeRegex = () => new RegExp(`^${prefixAsString}([^:^.]+)\\\\b`);\n\nfunction toParsedDirectives(transformedAttributeMap, originalAttributeOverride) {\n  return ({\n    name,\n    value\n  }) => {\n    let typeMatch = name.match(alpineAttributeRegex());\n    let valueMatch = name.match(/:([a-zA-Z0-9\\-:]+)/);\n    let modifiers = name.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || [];\n    let original = originalAttributeOverride || transformedAttributeMap[name] || name;\n    return {\n      type: typeMatch ? typeMatch[1] : null,\n      value: valueMatch ? valueMatch[1] : null,\n      modifiers: modifiers.map(i => i.replace(\".\", \"\")),\n      expression: value,\n      original\n    };\n  };\n}\n\nvar DEFAULT = \"DEFAULT\";\nvar directiveOrder = [\"ignore\", \"ref\", \"data\", \"id\", \"bind\", \"init\", \"for\", \"mask\", \"model\", \"modelable\", \"transition\", \"show\", \"if\", DEFAULT, \"teleport\", \"element\"];\n\nfunction byPriority(a, b) {\n  let typeA = directiveOrder.indexOf(a.type) === -1 ? DEFAULT : a.type;\n  let typeB = directiveOrder.indexOf(b.type) === -1 ? DEFAULT : b.type;\n  return directiveOrder.indexOf(typeA) - directiveOrder.indexOf(typeB);\n} // packages/alpinejs/src/utils/dispatch.js\n\n\nfunction dispatch(el, name, detail = {}) {\n  el.dispatchEvent(new CustomEvent(name, {\n    detail,\n    bubbles: true,\n    composed: true,\n    cancelable: true\n  }));\n} // packages/alpinejs/src/nextTick.js\n\n\nvar tickStack = [];\nvar isHolding = false;\n\nfunction nextTick(callback = () => {}) {\n  queueMicrotask(() => {\n    isHolding || setTimeout(() => {\n      releaseNextTicks();\n    });\n  });\n  return new Promise(res => {\n    tickStack.push(() => {\n      callback();\n      res();\n    });\n  });\n}\n\nfunction releaseNextTicks() {\n  isHolding = false;\n\n  while (tickStack.length) tickStack.shift()();\n}\n\nfunction holdNextTicks() {\n  isHolding = true;\n} // packages/alpinejs/src/utils/walk.js\n\n\nfunction walk(el, callback) {\n  if (typeof ShadowRoot === \"function\" && el instanceof ShadowRoot) {\n    Array.from(el.children).forEach(el2 => walk(el2, callback));\n    return;\n  }\n\n  let skip = false;\n  callback(el, () => skip = true);\n  if (skip) return;\n  let node = el.firstElementChild;\n\n  while (node) {\n    walk(node, callback, false);\n    node = node.nextElementSibling;\n  }\n} // packages/alpinejs/src/utils/warn.js\n\n\nfunction warn(message, ...args) {\n  console.warn(`Alpine Warning: ${message}`, ...args);\n} // packages/alpinejs/src/lifecycle.js\n\n\nfunction start() {\n  if (!document.body) warn(\"Unable to initialize. Trying to load Alpine before `<body>` is available. Did you forget to add `defer` in Alpine's `<script>` tag?\");\n  dispatch(document, \"alpine:init\");\n  dispatch(document, \"alpine:initializing\");\n  startObservingMutations();\n  onElAdded(el => initTree(el, walk));\n  onElRemoved(el => destroyTree(el));\n  onAttributesAdded((el, attrs) => {\n    directives(el, attrs).forEach(handle => handle());\n  });\n\n  let outNestedComponents = el => !closestRoot(el.parentElement, true);\n\n  Array.from(document.querySelectorAll(allSelectors())).filter(outNestedComponents).forEach(el => {\n    initTree(el);\n  });\n  dispatch(document, \"alpine:initialized\");\n}\n\nvar rootSelectorCallbacks = [];\nvar initSelectorCallbacks = [];\n\nfunction rootSelectors() {\n  return rootSelectorCallbacks.map(fn => fn());\n}\n\nfunction allSelectors() {\n  return rootSelectorCallbacks.concat(initSelectorCallbacks).map(fn => fn());\n}\n\nfunction addRootSelector(selectorCallback) {\n  rootSelectorCallbacks.push(selectorCallback);\n}\n\nfunction addInitSelector(selectorCallback) {\n  initSelectorCallbacks.push(selectorCallback);\n}\n\nfunction closestRoot(el, includeInitSelectors = false) {\n  return findClosest(el, element => {\n    const selectors = includeInitSelectors ? allSelectors() : rootSelectors();\n    if (selectors.some(selector => element.matches(selector))) return true;\n  });\n}\n\nfunction findClosest(el, callback) {\n  if (!el) return;\n  if (callback(el)) return el;\n  if (el._x_teleportBack) el = el._x_teleportBack;\n  if (!el.parentElement) return;\n  return findClosest(el.parentElement, callback);\n}\n\nfunction isRoot(el) {\n  return rootSelectors().some(selector => el.matches(selector));\n}\n\nfunction initTree(el, walker = walk) {\n  deferHandlingDirectives(() => {\n    walker(el, (el2, skip) => {\n      directives(el2, el2.attributes).forEach(handle => handle());\n      el2._x_ignore && skip();\n    });\n  });\n}\n\nfunction destroyTree(root) {\n  walk(root, el => cleanupAttributes(el));\n} // packages/alpinejs/src/utils/classes.js\n\n\nfunction setClasses(el, value) {\n  if (Array.isArray(value)) {\n    return setClassesFromString(el, value.join(\" \"));\n  } else if (typeof value === \"object\" && value !== null) {\n    return setClassesFromObject(el, value);\n  } else if (typeof value === \"function\") {\n    return setClasses(el, value());\n  }\n\n  return setClassesFromString(el, value);\n}\n\nfunction setClassesFromString(el, classString) {\n  let split = classString2 => classString2.split(\" \").filter(Boolean);\n\n  let missingClasses = classString2 => classString2.split(\" \").filter(i => !el.classList.contains(i)).filter(Boolean);\n\n  let addClassesAndReturnUndo = classes => {\n    el.classList.add(...classes);\n    return () => {\n      el.classList.remove(...classes);\n    };\n  };\n\n  classString = classString === true ? classString = \"\" : classString || \"\";\n  return addClassesAndReturnUndo(missingClasses(classString));\n}\n\nfunction setClassesFromObject(el, classObject) {\n  let split = classString => classString.split(\" \").filter(Boolean);\n\n  let forAdd = Object.entries(classObject).flatMap(([classString, bool]) => bool ? split(classString) : false).filter(Boolean);\n  let forRemove = Object.entries(classObject).flatMap(([classString, bool]) => !bool ? split(classString) : false).filter(Boolean);\n  let added = [];\n  let removed = [];\n  forRemove.forEach(i => {\n    if (el.classList.contains(i)) {\n      el.classList.remove(i);\n      removed.push(i);\n    }\n  });\n  forAdd.forEach(i => {\n    if (!el.classList.contains(i)) {\n      el.classList.add(i);\n      added.push(i);\n    }\n  });\n  return () => {\n    removed.forEach(i => el.classList.add(i));\n    added.forEach(i => el.classList.remove(i));\n  };\n} // packages/alpinejs/src/utils/styles.js\n\n\nfunction setStyles(el, value) {\n  if (typeof value === \"object\" && value !== null) {\n    return setStylesFromObject(el, value);\n  }\n\n  return setStylesFromString(el, value);\n}\n\nfunction setStylesFromObject(el, value) {\n  let previousStyles = {};\n  Object.entries(value).forEach(([key, value2]) => {\n    previousStyles[key] = el.style[key];\n\n    if (!key.startsWith(\"--\")) {\n      key = kebabCase(key);\n    }\n\n    el.style.setProperty(key, value2);\n  });\n  setTimeout(() => {\n    if (el.style.length === 0) {\n      el.removeAttribute(\"style\");\n    }\n  });\n  return () => {\n    setStyles(el, previousStyles);\n  };\n}\n\nfunction setStylesFromString(el, value) {\n  let cache = el.getAttribute(\"style\", value);\n  el.setAttribute(\"style\", value);\n  return () => {\n    el.setAttribute(\"style\", cache || \"\");\n  };\n}\n\nfunction kebabCase(subject) {\n  return subject.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n} // packages/alpinejs/src/utils/once.js\n\n\nfunction once(callback, fallback = () => {}) {\n  let called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      callback.apply(this, arguments);\n    } else {\n      fallback.apply(this, arguments);\n    }\n  };\n} // packages/alpinejs/src/directives/x-transition.js\n\n\ndirective(\"transition\", (el, {\n  value,\n  modifiers,\n  expression\n}, {\n  evaluate: evaluate2\n}) => {\n  if (typeof expression === \"function\") expression = evaluate2(expression);\n\n  if (!expression) {\n    registerTransitionsFromHelper(el, modifiers, value);\n  } else {\n    registerTransitionsFromClassString(el, expression, value);\n  }\n});\n\nfunction registerTransitionsFromClassString(el, classString, stage) {\n  registerTransitionObject(el, setClasses, \"\");\n  let directiveStorageMap = {\n    enter: classes => {\n      el._x_transition.enter.during = classes;\n    },\n    \"enter-start\": classes => {\n      el._x_transition.enter.start = classes;\n    },\n    \"enter-end\": classes => {\n      el._x_transition.enter.end = classes;\n    },\n    leave: classes => {\n      el._x_transition.leave.during = classes;\n    },\n    \"leave-start\": classes => {\n      el._x_transition.leave.start = classes;\n    },\n    \"leave-end\": classes => {\n      el._x_transition.leave.end = classes;\n    }\n  };\n  directiveStorageMap[stage](classString);\n}\n\nfunction registerTransitionsFromHelper(el, modifiers, stage) {\n  registerTransitionObject(el, setStyles);\n  let doesntSpecify = !modifiers.includes(\"in\") && !modifiers.includes(\"out\") && !stage;\n  let transitioningIn = doesntSpecify || modifiers.includes(\"in\") || [\"enter\"].includes(stage);\n  let transitioningOut = doesntSpecify || modifiers.includes(\"out\") || [\"leave\"].includes(stage);\n\n  if (modifiers.includes(\"in\") && !doesntSpecify) {\n    modifiers = modifiers.filter((i, index) => index < modifiers.indexOf(\"out\"));\n  }\n\n  if (modifiers.includes(\"out\") && !doesntSpecify) {\n    modifiers = modifiers.filter((i, index) => index > modifiers.indexOf(\"out\"));\n  }\n\n  let wantsAll = !modifiers.includes(\"opacity\") && !modifiers.includes(\"scale\");\n  let wantsOpacity = wantsAll || modifiers.includes(\"opacity\");\n  let wantsScale = wantsAll || modifiers.includes(\"scale\");\n  let opacityValue = wantsOpacity ? 0 : 1;\n  let scaleValue = wantsScale ? modifierValue(modifiers, \"scale\", 95) / 100 : 1;\n  let delay = modifierValue(modifiers, \"delay\", 0);\n  let origin = modifierValue(modifiers, \"origin\", \"center\");\n  let property = \"opacity, transform\";\n  let durationIn = modifierValue(modifiers, \"duration\", 150) / 1e3;\n  let durationOut = modifierValue(modifiers, \"duration\", 75) / 1e3;\n  let easing = `cubic-bezier(0.4, 0.0, 0.2, 1)`;\n\n  if (transitioningIn) {\n    el._x_transition.enter.during = {\n      transformOrigin: origin,\n      transitionDelay: delay,\n      transitionProperty: property,\n      transitionDuration: `${durationIn}s`,\n      transitionTimingFunction: easing\n    };\n    el._x_transition.enter.start = {\n      opacity: opacityValue,\n      transform: `scale(${scaleValue})`\n    };\n    el._x_transition.enter.end = {\n      opacity: 1,\n      transform: `scale(1)`\n    };\n  }\n\n  if (transitioningOut) {\n    el._x_transition.leave.during = {\n      transformOrigin: origin,\n      transitionDelay: delay,\n      transitionProperty: property,\n      transitionDuration: `${durationOut}s`,\n      transitionTimingFunction: easing\n    };\n    el._x_transition.leave.start = {\n      opacity: 1,\n      transform: `scale(1)`\n    };\n    el._x_transition.leave.end = {\n      opacity: opacityValue,\n      transform: `scale(${scaleValue})`\n    };\n  }\n}\n\nfunction registerTransitionObject(el, setFunction, defaultValue = {}) {\n  if (!el._x_transition) el._x_transition = {\n    enter: {\n      during: defaultValue,\n      start: defaultValue,\n      end: defaultValue\n    },\n    leave: {\n      during: defaultValue,\n      start: defaultValue,\n      end: defaultValue\n    },\n\n    in(before = () => {}, after = () => {}) {\n      transition(el, setFunction, {\n        during: this.enter.during,\n        start: this.enter.start,\n        end: this.enter.end\n      }, before, after);\n    },\n\n    out(before = () => {}, after = () => {}) {\n      transition(el, setFunction, {\n        during: this.leave.during,\n        start: this.leave.start,\n        end: this.leave.end\n      }, before, after);\n    }\n\n  };\n}\n\nwindow.Element.prototype._x_toggleAndCascadeWithTransitions = function (el, value, show, hide) {\n  let clickAwayCompatibleShow = () => {\n    document.visibilityState === \"visible\" ? requestAnimationFrame(show) : setTimeout(show);\n  };\n\n  if (value) {\n    if (el._x_transition && (el._x_transition.enter || el._x_transition.leave)) {\n      el._x_transition.enter && (Object.entries(el._x_transition.enter.during).length || Object.entries(el._x_transition.enter.start).length || Object.entries(el._x_transition.enter.end).length) ? el._x_transition.in(show) : clickAwayCompatibleShow();\n    } else {\n      el._x_transition ? el._x_transition.in(show) : clickAwayCompatibleShow();\n    }\n\n    return;\n  }\n\n  el._x_hidePromise = el._x_transition ? new Promise((resolve, reject) => {\n    el._x_transition.out(() => {}, () => resolve(hide));\n\n    el._x_transitioning.beforeCancel(() => reject({\n      isFromCancelledTransition: true\n    }));\n  }) : Promise.resolve(hide);\n  queueMicrotask(() => {\n    let closest = closestHide(el);\n\n    if (closest) {\n      if (!closest._x_hideChildren) closest._x_hideChildren = [];\n\n      closest._x_hideChildren.push(el);\n    } else {\n      queueMicrotask(() => {\n        let hideAfterChildren = el2 => {\n          let carry = Promise.all([el2._x_hidePromise, ...(el2._x_hideChildren || []).map(hideAfterChildren)]).then(([i]) => i());\n          delete el2._x_hidePromise;\n          delete el2._x_hideChildren;\n          return carry;\n        };\n\n        hideAfterChildren(el).catch(e => {\n          if (!e.isFromCancelledTransition) throw e;\n        });\n      });\n    }\n  });\n};\n\nfunction closestHide(el) {\n  let parent = el.parentNode;\n  if (!parent) return;\n  return parent._x_hidePromise ? parent : closestHide(parent);\n}\n\nfunction transition(el, setFunction, {\n  during,\n  start: start2,\n  end\n} = {}, before = () => {}, after = () => {}) {\n  if (el._x_transitioning) el._x_transitioning.cancel();\n\n  if (Object.keys(during).length === 0 && Object.keys(start2).length === 0 && Object.keys(end).length === 0) {\n    before();\n    after();\n    return;\n  }\n\n  let undoStart, undoDuring, undoEnd;\n  performTransition(el, {\n    start() {\n      undoStart = setFunction(el, start2);\n    },\n\n    during() {\n      undoDuring = setFunction(el, during);\n    },\n\n    before,\n\n    end() {\n      undoStart();\n      undoEnd = setFunction(el, end);\n    },\n\n    after,\n\n    cleanup() {\n      undoDuring();\n      undoEnd();\n    }\n\n  });\n}\n\nfunction performTransition(el, stages) {\n  let interrupted, reachedBefore, reachedEnd;\n  let finish = once(() => {\n    mutateDom(() => {\n      interrupted = true;\n      if (!reachedBefore) stages.before();\n\n      if (!reachedEnd) {\n        stages.end();\n        releaseNextTicks();\n      }\n\n      stages.after();\n      if (el.isConnected) stages.cleanup();\n      delete el._x_transitioning;\n    });\n  });\n  el._x_transitioning = {\n    beforeCancels: [],\n\n    beforeCancel(callback) {\n      this.beforeCancels.push(callback);\n    },\n\n    cancel: once(function () {\n      while (this.beforeCancels.length) {\n        this.beforeCancels.shift()();\n      }\n\n      ;\n      finish();\n    }),\n    finish\n  };\n  mutateDom(() => {\n    stages.start();\n    stages.during();\n  });\n  holdNextTicks();\n  requestAnimationFrame(() => {\n    if (interrupted) return;\n    let duration = Number(getComputedStyle(el).transitionDuration.replace(/,.*/, \"\").replace(\"s\", \"\")) * 1e3;\n    let delay = Number(getComputedStyle(el).transitionDelay.replace(/,.*/, \"\").replace(\"s\", \"\")) * 1e3;\n    if (duration === 0) duration = Number(getComputedStyle(el).animationDuration.replace(\"s\", \"\")) * 1e3;\n    mutateDom(() => {\n      stages.before();\n    });\n    reachedBefore = true;\n    requestAnimationFrame(() => {\n      if (interrupted) return;\n      mutateDom(() => {\n        stages.end();\n      });\n      releaseNextTicks();\n      setTimeout(el._x_transitioning.finish, duration + delay);\n      reachedEnd = true;\n    });\n  });\n}\n\nfunction modifierValue(modifiers, key, fallback) {\n  if (modifiers.indexOf(key) === -1) return fallback;\n  const rawValue = modifiers[modifiers.indexOf(key) + 1];\n  if (!rawValue) return fallback;\n\n  if (key === \"scale\") {\n    if (isNaN(rawValue)) return fallback;\n  }\n\n  if (key === \"duration\") {\n    let match = rawValue.match(/([0-9]+)ms/);\n    if (match) return match[1];\n  }\n\n  if (key === \"origin\") {\n    if ([\"top\", \"right\", \"left\", \"center\", \"bottom\"].includes(modifiers[modifiers.indexOf(key) + 2])) {\n      return [rawValue, modifiers[modifiers.indexOf(key) + 2]].join(\" \");\n    }\n  }\n\n  return rawValue;\n} // packages/alpinejs/src/clone.js\n\n\nvar isCloning = false;\n\nfunction skipDuringClone(callback, fallback = () => {}) {\n  return (...args) => isCloning ? fallback(...args) : callback(...args);\n}\n\nfunction clone(oldEl, newEl) {\n  if (!newEl._x_dataStack) newEl._x_dataStack = oldEl._x_dataStack;\n  isCloning = true;\n  dontRegisterReactiveSideEffects(() => {\n    cloneTree(newEl);\n  });\n  isCloning = false;\n}\n\nfunction cloneTree(el) {\n  let hasRunThroughFirstEl = false;\n\n  let shallowWalker = (el2, callback) => {\n    walk(el2, (el3, skip) => {\n      if (hasRunThroughFirstEl && isRoot(el3)) return skip();\n      hasRunThroughFirstEl = true;\n      callback(el3, skip);\n    });\n  };\n\n  initTree(el, shallowWalker);\n}\n\nfunction dontRegisterReactiveSideEffects(callback) {\n  let cache = effect;\n  overrideEffect((callback2, el) => {\n    let storedEffect = cache(callback2);\n    release(storedEffect);\n    return () => {};\n  });\n  callback();\n  overrideEffect(cache);\n} // packages/alpinejs/src/utils/bind.js\n\n\nfunction bind(el, name, value, modifiers = []) {\n  if (!el._x_bindings) el._x_bindings = reactive({});\n  el._x_bindings[name] = value;\n  name = modifiers.includes(\"camel\") ? camelCase(name) : name;\n\n  switch (name) {\n    case \"value\":\n      bindInputValue(el, value);\n      break;\n\n    case \"style\":\n      bindStyles(el, value);\n      break;\n\n    case \"class\":\n      bindClasses(el, value);\n      break;\n\n    default:\n      bindAttribute(el, name, value);\n      break;\n  }\n}\n\nfunction bindInputValue(el, value) {\n  if (el.type === \"radio\") {\n    if (el.attributes.value === void 0) {\n      el.value = value;\n    }\n\n    if (window.fromModel) {\n      el.checked = checkedAttrLooseCompare(el.value, value);\n    }\n  } else if (el.type === \"checkbox\") {\n    if (Number.isInteger(value)) {\n      el.value = value;\n    } else if (!Number.isInteger(value) && !Array.isArray(value) && typeof value !== \"boolean\" && ![null, void 0].includes(value)) {\n      el.value = String(value);\n    } else {\n      if (Array.isArray(value)) {\n        el.checked = value.some(val => checkedAttrLooseCompare(val, el.value));\n      } else {\n        el.checked = !!value;\n      }\n    }\n  } else if (el.tagName === \"SELECT\") {\n    updateSelect(el, value);\n  } else {\n    if (el.value === value) return;\n    el.value = value;\n  }\n}\n\nfunction bindClasses(el, value) {\n  if (el._x_undoAddedClasses) el._x_undoAddedClasses();\n  el._x_undoAddedClasses = setClasses(el, value);\n}\n\nfunction bindStyles(el, value) {\n  if (el._x_undoAddedStyles) el._x_undoAddedStyles();\n  el._x_undoAddedStyles = setStyles(el, value);\n}\n\nfunction bindAttribute(el, name, value) {\n  if ([null, void 0, false].includes(value) && attributeShouldntBePreservedIfFalsy(name)) {\n    el.removeAttribute(name);\n  } else {\n    if (isBooleanAttr(name)) value = name;\n    setIfChanged(el, name, value);\n  }\n}\n\nfunction setIfChanged(el, attrName, value) {\n  if (el.getAttribute(attrName) != value) {\n    el.setAttribute(attrName, value);\n  }\n}\n\nfunction updateSelect(el, value) {\n  const arrayWrappedValue = [].concat(value).map(value2 => {\n    return value2 + \"\";\n  });\n  Array.from(el.options).forEach(option => {\n    option.selected = arrayWrappedValue.includes(option.value);\n  });\n}\n\nfunction camelCase(subject) {\n  return subject.toLowerCase().replace(/-(\\w)/g, (match, char) => char.toUpperCase());\n}\n\nfunction checkedAttrLooseCompare(valueA, valueB) {\n  return valueA == valueB;\n}\n\nfunction isBooleanAttr(attrName) {\n  const booleanAttributes = [\"disabled\", \"checked\", \"required\", \"readonly\", \"hidden\", \"open\", \"selected\", \"autofocus\", \"itemscope\", \"multiple\", \"novalidate\", \"allowfullscreen\", \"allowpaymentrequest\", \"formnovalidate\", \"autoplay\", \"controls\", \"loop\", \"muted\", \"playsinline\", \"default\", \"ismap\", \"reversed\", \"async\", \"defer\", \"nomodule\"];\n  return booleanAttributes.includes(attrName);\n}\n\nfunction attributeShouldntBePreservedIfFalsy(name) {\n  return ![\"aria-pressed\", \"aria-checked\", \"aria-expanded\", \"aria-selected\"].includes(name);\n}\n\nfunction getBinding(el, name, fallback) {\n  if (el._x_bindings && el._x_bindings[name] !== void 0) return el._x_bindings[name];\n  let attr = el.getAttribute(name);\n  if (attr === null) return typeof fallback === \"function\" ? fallback() : fallback;\n\n  if (isBooleanAttr(name)) {\n    return !![name, \"true\"].includes(attr);\n  }\n\n  if (attr === \"\") return true;\n  return attr;\n} // packages/alpinejs/src/utils/debounce.js\n\n\nfunction debounce(func, wait) {\n  var timeout;\n  return function () {\n    var context = this,\n        args = arguments;\n\n    var later = function () {\n      timeout = null;\n      func.apply(context, args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n} // packages/alpinejs/src/utils/throttle.js\n\n\nfunction throttle(func, limit) {\n  let inThrottle;\n  return function () {\n    let context = this,\n        args = arguments;\n\n    if (!inThrottle) {\n      func.apply(context, args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n} // packages/alpinejs/src/plugin.js\n\n\nfunction plugin(callback) {\n  callback(alpine_default);\n} // packages/alpinejs/src/store.js\n\n\nvar stores = {};\nvar isReactive = false;\n\nfunction store(name, value) {\n  if (!isReactive) {\n    stores = reactive(stores);\n    isReactive = true;\n  }\n\n  if (value === void 0) {\n    return stores[name];\n  }\n\n  stores[name] = value;\n\n  if (typeof value === \"object\" && value !== null && value.hasOwnProperty(\"init\") && typeof value.init === \"function\") {\n    stores[name].init();\n  }\n\n  initInterceptors(stores[name]);\n}\n\nfunction getStores() {\n  return stores;\n} // packages/alpinejs/src/binds.js\n\n\nvar binds = {};\n\nfunction bind2(name, object) {\n  binds[name] = typeof object !== \"function\" ? () => object : object;\n}\n\nfunction injectBindingProviders(obj) {\n  Object.entries(binds).forEach(([name, callback]) => {\n    Object.defineProperty(obj, name, {\n      get() {\n        return (...args) => {\n          return callback(...args);\n        };\n      }\n\n    });\n  });\n  return obj;\n} // packages/alpinejs/src/datas.js\n\n\nvar datas = {};\n\nfunction data(name, callback) {\n  datas[name] = callback;\n}\n\nfunction injectDataProviders(obj, context) {\n  Object.entries(datas).forEach(([name, callback]) => {\n    Object.defineProperty(obj, name, {\n      get() {\n        return (...args) => {\n          return callback.bind(context)(...args);\n        };\n      },\n\n      enumerable: false\n    });\n  });\n  return obj;\n} // packages/alpinejs/src/alpine.js\n\n\nvar Alpine = {\n  get reactive() {\n    return reactive;\n  },\n\n  get release() {\n    return release;\n  },\n\n  get effect() {\n    return effect;\n  },\n\n  get raw() {\n    return raw;\n  },\n\n  version: \"3.10.0\",\n  flushAndStopDeferringMutations,\n  dontAutoEvaluateFunctions,\n  disableEffectScheduling,\n  setReactivityEngine,\n  closestDataStack,\n  skipDuringClone,\n  addRootSelector,\n  addInitSelector,\n  addScopeToNode,\n  deferMutations,\n  mapAttributes,\n  evaluateLater,\n  setEvaluator,\n  mergeProxies,\n  findClosest,\n  closestRoot,\n  interceptor,\n  transition,\n  setStyles,\n  mutateDom,\n  directive,\n  throttle,\n  debounce,\n  evaluate,\n  initTree,\n  nextTick,\n  prefixed: prefix,\n  prefix: setPrefix,\n  plugin,\n  magic,\n  store,\n  start,\n  clone,\n  bound: getBinding,\n  $data: scope,\n  data,\n  bind: bind2\n};\nvar alpine_default = Alpine; // node_modules/@vue/shared/dist/shared.esm-bundler.js\n\nfunction makeMap(str, expectsLowerCase) {\n  const map = Object.create(null);\n  const list = str.split(\",\");\n\n  for (let i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n\n  return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\n}\n\nvar PatchFlagNames = {\n  [1]: `TEXT`,\n  [2]: `CLASS`,\n  [4]: `STYLE`,\n  [8]: `PROPS`,\n  [16]: `FULL_PROPS`,\n  [32]: `HYDRATE_EVENTS`,\n  [64]: `STABLE_FRAGMENT`,\n  [128]: `KEYED_FRAGMENT`,\n  [256]: `UNKEYED_FRAGMENT`,\n  [512]: `NEED_PATCH`,\n  [1024]: `DYNAMIC_SLOTS`,\n  [2048]: `DEV_ROOT_FRAGMENT`,\n  [-1]: `HOISTED`,\n  [-2]: `BAIL`\n};\nvar slotFlagsText = {\n  [1]: \"STABLE\",\n  [2]: \"DYNAMIC\",\n  [3]: \"FORWARDED\"\n};\nvar specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\nvar isBooleanAttr2 = /* @__PURE__ */makeMap(specialBooleanAttrs + `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,loop,open,required,reversed,scoped,seamless,checked,muted,multiple,selected`);\nvar EMPTY_OBJ = false ? undefined : {};\nvar EMPTY_ARR = false ? undefined : [];\nvar extend = Object.assign;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar hasOwn = (val, key) => hasOwnProperty.call(val, key);\n\nvar isArray = Array.isArray;\n\nvar isMap = val => toTypeString(val) === \"[object Map]\";\n\nvar isString = val => typeof val === \"string\";\n\nvar isSymbol = val => typeof val === \"symbol\";\n\nvar isObject = val => val !== null && typeof val === \"object\";\n\nvar objectToString = Object.prototype.toString;\n\nvar toTypeString = value => objectToString.call(value);\n\nvar toRawType = value => {\n  return toTypeString(value).slice(8, -1);\n};\n\nvar isIntegerKey = key => isString(key) && key !== \"NaN\" && key[0] !== \"-\" && \"\" + parseInt(key, 10) === key;\n\nvar cacheStringFunction = fn => {\n  const cache = Object.create(null);\n  return str => {\n    const hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n};\n\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cacheStringFunction(str => {\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : \"\");\n});\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cacheStringFunction(str => str.replace(hyphenateRE, \"-$1\").toLowerCase());\nvar capitalize = cacheStringFunction(str => str.charAt(0).toUpperCase() + str.slice(1));\nvar toHandlerKey = cacheStringFunction(str => str ? `on${capitalize(str)}` : ``);\n\nvar hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue); // node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js\n\n\nvar targetMap = new WeakMap();\nvar effectStack = [];\nvar activeEffect;\nvar ITERATE_KEY = Symbol(false ? undefined : \"\");\nvar MAP_KEY_ITERATE_KEY = Symbol(false ? undefined : \"\");\n\nfunction isEffect(fn) {\n  return fn && fn._isEffect === true;\n}\n\nfunction effect2(fn, options = EMPTY_OBJ) {\n  if (isEffect(fn)) {\n    fn = fn.raw;\n  }\n\n  const effect3 = createReactiveEffect(fn, options);\n\n  if (!options.lazy) {\n    effect3();\n  }\n\n  return effect3;\n}\n\nfunction stop(effect3) {\n  if (effect3.active) {\n    cleanup(effect3);\n\n    if (effect3.options.onStop) {\n      effect3.options.onStop();\n    }\n\n    effect3.active = false;\n  }\n}\n\nvar uid = 0;\n\nfunction createReactiveEffect(fn, options) {\n  const effect3 = function reactiveEffect() {\n    if (!effect3.active) {\n      return fn();\n    }\n\n    if (!effectStack.includes(effect3)) {\n      cleanup(effect3);\n\n      try {\n        enableTracking();\n        effectStack.push(effect3);\n        activeEffect = effect3;\n        return fn();\n      } finally {\n        effectStack.pop();\n        resetTracking();\n        activeEffect = effectStack[effectStack.length - 1];\n      }\n    }\n  };\n\n  effect3.id = uid++;\n  effect3.allowRecurse = !!options.allowRecurse;\n  effect3._isEffect = true;\n  effect3.active = true;\n  effect3.raw = fn;\n  effect3.deps = [];\n  effect3.options = options;\n  return effect3;\n}\n\nfunction cleanup(effect3) {\n  const {\n    deps\n  } = effect3;\n\n  if (deps.length) {\n    for (let i = 0; i < deps.length; i++) {\n      deps[i].delete(effect3);\n    }\n\n    deps.length = 0;\n  }\n}\n\nvar shouldTrack = true;\nvar trackStack = [];\n\nfunction pauseTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = false;\n}\n\nfunction enableTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = true;\n}\n\nfunction resetTracking() {\n  const last = trackStack.pop();\n  shouldTrack = last === void 0 ? true : last;\n}\n\nfunction track(target, type, key) {\n  if (!shouldTrack || activeEffect === void 0) {\n    return;\n  }\n\n  let depsMap = targetMap.get(target);\n\n  if (!depsMap) {\n    targetMap.set(target, depsMap = new Map());\n  }\n\n  let dep = depsMap.get(key);\n\n  if (!dep) {\n    depsMap.set(key, dep = new Set());\n  }\n\n  if (!dep.has(activeEffect)) {\n    dep.add(activeEffect);\n    activeEffect.deps.push(dep);\n\n    if (false) {}\n  }\n}\n\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\n  const depsMap = targetMap.get(target);\n\n  if (!depsMap) {\n    return;\n  }\n\n  const effects = new Set();\n\n  const add2 = effectsToAdd => {\n    if (effectsToAdd) {\n      effectsToAdd.forEach(effect3 => {\n        if (effect3 !== activeEffect || effect3.allowRecurse) {\n          effects.add(effect3);\n        }\n      });\n    }\n  };\n\n  if (type === \"clear\") {\n    depsMap.forEach(add2);\n  } else if (key === \"length\" && isArray(target)) {\n    depsMap.forEach((dep, key2) => {\n      if (key2 === \"length\" || key2 >= newValue) {\n        add2(dep);\n      }\n    });\n  } else {\n    if (key !== void 0) {\n      add2(depsMap.get(key));\n    }\n\n    switch (type) {\n      case \"add\":\n        if (!isArray(target)) {\n          add2(depsMap.get(ITERATE_KEY));\n\n          if (isMap(target)) {\n            add2(depsMap.get(MAP_KEY_ITERATE_KEY));\n          }\n        } else if (isIntegerKey(key)) {\n          add2(depsMap.get(\"length\"));\n        }\n\n        break;\n\n      case \"delete\":\n        if (!isArray(target)) {\n          add2(depsMap.get(ITERATE_KEY));\n\n          if (isMap(target)) {\n            add2(depsMap.get(MAP_KEY_ITERATE_KEY));\n          }\n        }\n\n        break;\n\n      case \"set\":\n        if (isMap(target)) {\n          add2(depsMap.get(ITERATE_KEY));\n        }\n\n        break;\n    }\n  }\n\n  const run = effect3 => {\n    if (false) {}\n\n    if (effect3.options.scheduler) {\n      effect3.options.scheduler(effect3);\n    } else {\n      effect3();\n    }\n  };\n\n  effects.forEach(run);\n}\n\nvar isNonTrackableKeys = /* @__PURE__ */makeMap(`__proto__,__v_isRef,__isVue`);\nvar builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol).map(key => Symbol[key]).filter(isSymbol));\nvar get2 = /* @__PURE__ */createGetter();\nvar shallowGet = /* @__PURE__ */createGetter(false, true);\nvar readonlyGet = /* @__PURE__ */createGetter(true);\nvar shallowReadonlyGet = /* @__PURE__ */createGetter(true, true);\nvar arrayInstrumentations = {};\n[\"includes\", \"indexOf\", \"lastIndexOf\"].forEach(key => {\n  const method = Array.prototype[key];\n\n  arrayInstrumentations[key] = function (...args) {\n    const arr = toRaw(this);\n\n    for (let i = 0, l = this.length; i < l; i++) {\n      track(arr, \"get\", i + \"\");\n    }\n\n    const res = method.apply(arr, args);\n\n    if (res === -1 || res === false) {\n      return method.apply(arr, args.map(toRaw));\n    } else {\n      return res;\n    }\n  };\n});\n[\"push\", \"pop\", \"shift\", \"unshift\", \"splice\"].forEach(key => {\n  const method = Array.prototype[key];\n\n  arrayInstrumentations[key] = function (...args) {\n    pauseTracking();\n    const res = method.apply(this, args);\n    resetTracking();\n    return res;\n  };\n});\n\nfunction createGetter(isReadonly = false, shallow = false) {\n  return function get3(target, key, receiver) {\n    if (key === \"__v_isReactive\") {\n      return !isReadonly;\n    } else if (key === \"__v_isReadonly\") {\n      return isReadonly;\n    } else if (key === \"__v_raw\" && receiver === (isReadonly ? shallow ? shallowReadonlyMap : readonlyMap : shallow ? shallowReactiveMap : reactiveMap).get(target)) {\n      return target;\n    }\n\n    const targetIsArray = isArray(target);\n\n    if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\n      return Reflect.get(arrayInstrumentations, key, receiver);\n    }\n\n    const res = Reflect.get(target, key, receiver);\n\n    if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\n      return res;\n    }\n\n    if (!isReadonly) {\n      track(target, \"get\", key);\n    }\n\n    if (shallow) {\n      return res;\n    }\n\n    if (isRef(res)) {\n      const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\n      return shouldUnwrap ? res.value : res;\n    }\n\n    if (isObject(res)) {\n      return isReadonly ? readonly(res) : reactive2(res);\n    }\n\n    return res;\n  };\n}\n\nvar set2 = /* @__PURE__ */createSetter();\nvar shallowSet = /* @__PURE__ */createSetter(true);\n\nfunction createSetter(shallow = false) {\n  return function set3(target, key, value, receiver) {\n    let oldValue = target[key];\n\n    if (!shallow) {\n      value = toRaw(value);\n      oldValue = toRaw(oldValue);\n\n      if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\n        oldValue.value = value;\n        return true;\n      }\n    }\n\n    const hadKey = isArray(target) && isIntegerKey(key) ? Number(key) < target.length : hasOwn(target, key);\n    const result = Reflect.set(target, key, value, receiver);\n\n    if (target === toRaw(receiver)) {\n      if (!hadKey) {\n        trigger(target, \"add\", key, value);\n      } else if (hasChanged(value, oldValue)) {\n        trigger(target, \"set\", key, value, oldValue);\n      }\n    }\n\n    return result;\n  };\n}\n\nfunction deleteProperty(target, key) {\n  const hadKey = hasOwn(target, key);\n  const oldValue = target[key];\n  const result = Reflect.deleteProperty(target, key);\n\n  if (result && hadKey) {\n    trigger(target, \"delete\", key, void 0, oldValue);\n  }\n\n  return result;\n}\n\nfunction has(target, key) {\n  const result = Reflect.has(target, key);\n\n  if (!isSymbol(key) || !builtInSymbols.has(key)) {\n    track(target, \"has\", key);\n  }\n\n  return result;\n}\n\nfunction ownKeys(target) {\n  track(target, \"iterate\", isArray(target) ? \"length\" : ITERATE_KEY);\n  return Reflect.ownKeys(target);\n}\n\nvar mutableHandlers = {\n  get: get2,\n  set: set2,\n  deleteProperty,\n  has,\n  ownKeys\n};\nvar readonlyHandlers = {\n  get: readonlyGet,\n\n  set(target, key) {\n    if (false) {}\n\n    return true;\n  },\n\n  deleteProperty(target, key) {\n    if (false) {}\n\n    return true;\n  }\n\n};\nvar shallowReactiveHandlers = extend({}, mutableHandlers, {\n  get: shallowGet,\n  set: shallowSet\n});\nvar shallowReadonlyHandlers = extend({}, readonlyHandlers, {\n  get: shallowReadonlyGet\n});\n\nvar toReactive = value => isObject(value) ? reactive2(value) : value;\n\nvar toReadonly = value => isObject(value) ? readonly(value) : value;\n\nvar toShallow = value => value;\n\nvar getProto = v => Reflect.getPrototypeOf(v);\n\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\n  target = target[\"__v_raw\"];\n  const rawTarget = toRaw(target);\n  const rawKey = toRaw(key);\n\n  if (key !== rawKey) {\n    !isReadonly && track(rawTarget, \"get\", key);\n  }\n\n  !isReadonly && track(rawTarget, \"get\", rawKey);\n  const {\n    has: has2\n  } = getProto(rawTarget);\n  const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n\n  if (has2.call(rawTarget, key)) {\n    return wrap(target.get(key));\n  } else if (has2.call(rawTarget, rawKey)) {\n    return wrap(target.get(rawKey));\n  } else if (target !== rawTarget) {\n    target.get(key);\n  }\n}\n\nfunction has$1(key, isReadonly = false) {\n  const target = this[\"__v_raw\"];\n  const rawTarget = toRaw(target);\n  const rawKey = toRaw(key);\n\n  if (key !== rawKey) {\n    !isReadonly && track(rawTarget, \"has\", key);\n  }\n\n  !isReadonly && track(rawTarget, \"has\", rawKey);\n  return key === rawKey ? target.has(key) : target.has(key) || target.has(rawKey);\n}\n\nfunction size(target, isReadonly = false) {\n  target = target[\"__v_raw\"];\n  !isReadonly && track(toRaw(target), \"iterate\", ITERATE_KEY);\n  return Reflect.get(target, \"size\", target);\n}\n\nfunction add(value) {\n  value = toRaw(value);\n  const target = toRaw(this);\n  const proto = getProto(target);\n  const hadKey = proto.has.call(target, value);\n\n  if (!hadKey) {\n    target.add(value);\n    trigger(target, \"add\", value, value);\n  }\n\n  return this;\n}\n\nfunction set$1(key, value) {\n  value = toRaw(value);\n  const target = toRaw(this);\n  const {\n    has: has2,\n    get: get3\n  } = getProto(target);\n  let hadKey = has2.call(target, key);\n\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has2.call(target, key);\n  } else if (false) {}\n\n  const oldValue = get3.call(target, key);\n  target.set(key, value);\n\n  if (!hadKey) {\n    trigger(target, \"add\", key, value);\n  } else if (hasChanged(value, oldValue)) {\n    trigger(target, \"set\", key, value, oldValue);\n  }\n\n  return this;\n}\n\nfunction deleteEntry(key) {\n  const target = toRaw(this);\n  const {\n    has: has2,\n    get: get3\n  } = getProto(target);\n  let hadKey = has2.call(target, key);\n\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has2.call(target, key);\n  } else if (false) {}\n\n  const oldValue = get3 ? get3.call(target, key) : void 0;\n  const result = target.delete(key);\n\n  if (hadKey) {\n    trigger(target, \"delete\", key, void 0, oldValue);\n  }\n\n  return result;\n}\n\nfunction clear() {\n  const target = toRaw(this);\n  const hadItems = target.size !== 0;\n  const oldTarget = false ? undefined : void 0;\n  const result = target.clear();\n\n  if (hadItems) {\n    trigger(target, \"clear\", void 0, void 0, oldTarget);\n  }\n\n  return result;\n}\n\nfunction createForEach(isReadonly, isShallow) {\n  return function forEach(callback, thisArg) {\n    const observed = this;\n    const target = observed[\"__v_raw\"];\n    const rawTarget = toRaw(target);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    !isReadonly && track(rawTarget, \"iterate\", ITERATE_KEY);\n    return target.forEach((value, key) => {\n      return callback.call(thisArg, wrap(value), wrap(key), observed);\n    });\n  };\n}\n\nfunction createIterableMethod(method, isReadonly, isShallow) {\n  return function (...args) {\n    const target = this[\"__v_raw\"];\n    const rawTarget = toRaw(target);\n    const targetIsMap = isMap(rawTarget);\n    const isPair = method === \"entries\" || method === Symbol.iterator && targetIsMap;\n    const isKeyOnly = method === \"keys\" && targetIsMap;\n    const innerIterator = target[method](...args);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    !isReadonly && track(rawTarget, \"iterate\", isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\n    return {\n      next() {\n        const {\n          value,\n          done\n        } = innerIterator.next();\n        return done ? {\n          value,\n          done\n        } : {\n          value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\n          done\n        };\n      },\n\n      [Symbol.iterator]() {\n        return this;\n      }\n\n    };\n  };\n}\n\nfunction createReadonlyMethod(type) {\n  return function (...args) {\n    if (false) {}\n\n    return type === \"delete\" ? false : this;\n  };\n}\n\nvar mutableInstrumentations = {\n  get(key) {\n    return get$1(this, key);\n  },\n\n  get size() {\n    return size(this);\n  },\n\n  has: has$1,\n  add,\n  set: set$1,\n  delete: deleteEntry,\n  clear,\n  forEach: createForEach(false, false)\n};\nvar shallowInstrumentations = {\n  get(key) {\n    return get$1(this, key, false, true);\n  },\n\n  get size() {\n    return size(this);\n  },\n\n  has: has$1,\n  add,\n  set: set$1,\n  delete: deleteEntry,\n  clear,\n  forEach: createForEach(false, true)\n};\nvar readonlyInstrumentations = {\n  get(key) {\n    return get$1(this, key, true);\n  },\n\n  get size() {\n    return size(this, true);\n  },\n\n  has(key) {\n    return has$1.call(this, key, true);\n  },\n\n  add: createReadonlyMethod(\"add\"),\n  set: createReadonlyMethod(\"set\"),\n  delete: createReadonlyMethod(\"delete\"),\n  clear: createReadonlyMethod(\"clear\"),\n  forEach: createForEach(true, false)\n};\nvar shallowReadonlyInstrumentations = {\n  get(key) {\n    return get$1(this, key, true, true);\n  },\n\n  get size() {\n    return size(this, true);\n  },\n\n  has(key) {\n    return has$1.call(this, key, true);\n  },\n\n  add: createReadonlyMethod(\"add\"),\n  set: createReadonlyMethod(\"set\"),\n  delete: createReadonlyMethod(\"delete\"),\n  clear: createReadonlyMethod(\"clear\"),\n  forEach: createForEach(true, true)\n};\nvar iteratorMethods = [\"keys\", \"values\", \"entries\", Symbol.iterator];\niteratorMethods.forEach(method => {\n  mutableInstrumentations[method] = createIterableMethod(method, false, false);\n  readonlyInstrumentations[method] = createIterableMethod(method, true, false);\n  shallowInstrumentations[method] = createIterableMethod(method, false, true);\n  shallowReadonlyInstrumentations[method] = createIterableMethod(method, true, true);\n});\n\nfunction createInstrumentationGetter(isReadonly, shallow) {\n  const instrumentations = shallow ? isReadonly ? shallowReadonlyInstrumentations : shallowInstrumentations : isReadonly ? readonlyInstrumentations : mutableInstrumentations;\n  return (target, key, receiver) => {\n    if (key === \"__v_isReactive\") {\n      return !isReadonly;\n    } else if (key === \"__v_isReadonly\") {\n      return isReadonly;\n    } else if (key === \"__v_raw\") {\n      return target;\n    }\n\n    return Reflect.get(hasOwn(instrumentations, key) && key in target ? instrumentations : target, key, receiver);\n  };\n}\n\nvar mutableCollectionHandlers = {\n  get: createInstrumentationGetter(false, false)\n};\nvar shallowCollectionHandlers = {\n  get: createInstrumentationGetter(false, true)\n};\nvar readonlyCollectionHandlers = {\n  get: createInstrumentationGetter(true, false)\n};\nvar shallowReadonlyCollectionHandlers = {\n  get: createInstrumentationGetter(true, true)\n};\nvar reactiveMap = new WeakMap();\nvar shallowReactiveMap = new WeakMap();\nvar readonlyMap = new WeakMap();\nvar shallowReadonlyMap = new WeakMap();\n\nfunction targetTypeMap(rawType) {\n  switch (rawType) {\n    case \"Object\":\n    case \"Array\":\n      return 1;\n\n    case \"Map\":\n    case \"Set\":\n    case \"WeakMap\":\n    case \"WeakSet\":\n      return 2;\n\n    default:\n      return 0;\n  }\n}\n\nfunction getTargetType(value) {\n  return value[\"__v_skip\"] || !Object.isExtensible(value) ? 0 : targetTypeMap(toRawType(value));\n}\n\nfunction reactive2(target) {\n  if (target && target[\"__v_isReadonly\"]) {\n    return target;\n  }\n\n  return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);\n}\n\nfunction readonly(target) {\n  return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);\n}\n\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers, proxyMap) {\n  if (!isObject(target)) {\n    if (false) {}\n\n    return target;\n  }\n\n  if (target[\"__v_raw\"] && !(isReadonly && target[\"__v_isReactive\"])) {\n    return target;\n  }\n\n  const existingProxy = proxyMap.get(target);\n\n  if (existingProxy) {\n    return existingProxy;\n  }\n\n  const targetType = getTargetType(target);\n\n  if (targetType === 0) {\n    return target;\n  }\n\n  const proxy = new Proxy(target, targetType === 2 ? collectionHandlers : baseHandlers);\n  proxyMap.set(target, proxy);\n  return proxy;\n}\n\nfunction toRaw(observed) {\n  return observed && toRaw(observed[\"__v_raw\"]) || observed;\n}\n\nfunction isRef(r) {\n  return Boolean(r && r.__v_isRef === true);\n} // packages/alpinejs/src/magics/$nextTick.js\n\n\nmagic(\"nextTick\", () => nextTick); // packages/alpinejs/src/magics/$dispatch.js\n\nmagic(\"dispatch\", el => dispatch.bind(dispatch, el)); // packages/alpinejs/src/magics/$watch.js\n\nmagic(\"watch\", (el, {\n  evaluateLater: evaluateLater2,\n  effect: effect3\n}) => (key, callback) => {\n  let evaluate2 = evaluateLater2(key);\n  let firstTime = true;\n  let oldValue;\n  let effectReference = effect3(() => evaluate2(value => {\n    JSON.stringify(value);\n\n    if (!firstTime) {\n      queueMicrotask(() => {\n        callback(value, oldValue);\n        oldValue = value;\n      });\n    } else {\n      oldValue = value;\n    }\n\n    firstTime = false;\n  }));\n\n  el._x_effects.delete(effectReference);\n}); // packages/alpinejs/src/magics/$store.js\n\nmagic(\"store\", getStores); // packages/alpinejs/src/magics/$data.js\n\nmagic(\"data\", el => scope(el)); // packages/alpinejs/src/magics/$root.js\n\nmagic(\"root\", el => closestRoot(el)); // packages/alpinejs/src/magics/$refs.js\n\nmagic(\"refs\", el => {\n  if (el._x_refs_proxy) return el._x_refs_proxy;\n  el._x_refs_proxy = mergeProxies(getArrayOfRefObject(el));\n  return el._x_refs_proxy;\n});\n\nfunction getArrayOfRefObject(el) {\n  let refObjects = [];\n  let currentEl = el;\n\n  while (currentEl) {\n    if (currentEl._x_refs) refObjects.push(currentEl._x_refs);\n    currentEl = currentEl.parentNode;\n  }\n\n  return refObjects;\n} // packages/alpinejs/src/ids.js\n\n\nvar globalIdMemo = {};\n\nfunction findAndIncrementId(name) {\n  if (!globalIdMemo[name]) globalIdMemo[name] = 0;\n  return ++globalIdMemo[name];\n}\n\nfunction closestIdRoot(el, name) {\n  return findClosest(el, element => {\n    if (element._x_ids && element._x_ids[name]) return true;\n  });\n}\n\nfunction setIdRoot(el, name) {\n  if (!el._x_ids) el._x_ids = {};\n  if (!el._x_ids[name]) el._x_ids[name] = findAndIncrementId(name);\n} // packages/alpinejs/src/magics/$id.js\n\n\nmagic(\"id\", el => (name, key = null) => {\n  let root = closestIdRoot(el, name);\n  let id = root ? root._x_ids[name] : findAndIncrementId(name);\n  return key ? `${name}-${id}-${key}` : `${name}-${id}`;\n}); // packages/alpinejs/src/magics/$el.js\n\nmagic(\"el\", el => el); // packages/alpinejs/src/magics/index.js\n\nwarnMissingPluginMagic(\"Focus\", \"focus\", \"focus\");\nwarnMissingPluginMagic(\"Persist\", \"persist\", \"persist\");\n\nfunction warnMissingPluginMagic(name, magicName, slug) {\n  magic(magicName, el => warn(`You can't use [$${directiveName}] without first installing the \"${name}\" plugin here: https://alpinejs.dev/plugins/${slug}`, el));\n} // packages/alpinejs/src/directives/x-modelable.js\n\n\ndirective(\"modelable\", (el, {\n  expression\n}, {\n  effect: effect3,\n  evaluateLater: evaluateLater2\n}) => {\n  let func = evaluateLater2(expression);\n\n  let innerGet = () => {\n    let result;\n    func(i => result = i);\n    return result;\n  };\n\n  let evaluateInnerSet = evaluateLater2(`${expression} = __placeholder`);\n\n  let innerSet = val => evaluateInnerSet(() => {}, {\n    scope: {\n      __placeholder: val\n    }\n  });\n\n  let initialValue = innerGet();\n  innerSet(initialValue);\n  queueMicrotask(() => {\n    if (!el._x_model) return;\n\n    el._x_removeModelListeners[\"default\"]();\n\n    let outerGet = el._x_model.get;\n    let outerSet = el._x_model.set;\n    effect3(() => innerSet(outerGet()));\n    effect3(() => outerSet(innerGet()));\n  });\n}); // packages/alpinejs/src/directives/x-teleport.js\n\ndirective(\"teleport\", (el, {\n  expression\n}, {\n  cleanup: cleanup2\n}) => {\n  if (el.tagName.toLowerCase() !== \"template\") warn(\"x-teleport can only be used on a <template> tag\", el);\n  let target = document.querySelector(expression);\n  if (!target) warn(`Cannot find x-teleport element for selector: \"${expression}\"`);\n  let clone2 = el.content.cloneNode(true).firstElementChild;\n  el._x_teleport = clone2;\n  clone2._x_teleportBack = el;\n\n  if (el._x_forwardEvents) {\n    el._x_forwardEvents.forEach(eventName => {\n      clone2.addEventListener(eventName, e => {\n        e.stopPropagation();\n        el.dispatchEvent(new e.constructor(e.type, e));\n      });\n    });\n  }\n\n  addScopeToNode(clone2, {}, el);\n  mutateDom(() => {\n    target.appendChild(clone2);\n    initTree(clone2);\n    clone2._x_ignore = true;\n  });\n  cleanup2(() => clone2.remove());\n}); // packages/alpinejs/src/directives/x-ignore.js\n\nvar handler = () => {};\n\nhandler.inline = (el, {\n  modifiers\n}, {\n  cleanup: cleanup2\n}) => {\n  modifiers.includes(\"self\") ? el._x_ignoreSelf = true : el._x_ignore = true;\n  cleanup2(() => {\n    modifiers.includes(\"self\") ? delete el._x_ignoreSelf : delete el._x_ignore;\n  });\n};\n\ndirective(\"ignore\", handler); // packages/alpinejs/src/directives/x-effect.js\n\ndirective(\"effect\", (el, {\n  expression\n}, {\n  effect: effect3\n}) => effect3(evaluateLater(el, expression))); // packages/alpinejs/src/utils/on.js\n\nfunction on(el, event, modifiers, callback) {\n  let listenerTarget = el;\n\n  let handler3 = e => callback(e);\n\n  let options = {};\n\n  let wrapHandler = (callback2, wrapper) => e => wrapper(callback2, e);\n\n  if (modifiers.includes(\"dot\")) event = dotSyntax(event);\n  if (modifiers.includes(\"camel\")) event = camelCase2(event);\n  if (modifiers.includes(\"passive\")) options.passive = true;\n  if (modifiers.includes(\"capture\")) options.capture = true;\n  if (modifiers.includes(\"window\")) listenerTarget = window;\n  if (modifiers.includes(\"document\")) listenerTarget = document;\n  if (modifiers.includes(\"prevent\")) handler3 = wrapHandler(handler3, (next, e) => {\n    e.preventDefault();\n    next(e);\n  });\n  if (modifiers.includes(\"stop\")) handler3 = wrapHandler(handler3, (next, e) => {\n    e.stopPropagation();\n    next(e);\n  });\n  if (modifiers.includes(\"self\")) handler3 = wrapHandler(handler3, (next, e) => {\n    e.target === el && next(e);\n  });\n\n  if (modifiers.includes(\"away\") || modifiers.includes(\"outside\")) {\n    listenerTarget = document;\n    handler3 = wrapHandler(handler3, (next, e) => {\n      if (el.contains(e.target)) return;\n      if (e.target.isConnected === false) return;\n      if (el.offsetWidth < 1 && el.offsetHeight < 1) return;\n      if (el._x_isShown === false) return;\n      next(e);\n    });\n  }\n\n  if (modifiers.includes(\"once\")) {\n    handler3 = wrapHandler(handler3, (next, e) => {\n      next(e);\n      listenerTarget.removeEventListener(event, handler3, options);\n    });\n  }\n\n  handler3 = wrapHandler(handler3, (next, e) => {\n    if (isKeyEvent(event)) {\n      if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {\n        return;\n      }\n    }\n\n    next(e);\n  });\n\n  if (modifiers.includes(\"debounce\")) {\n    let nextModifier = modifiers[modifiers.indexOf(\"debounce\") + 1] || \"invalid-wait\";\n    let wait = isNumeric(nextModifier.split(\"ms\")[0]) ? Number(nextModifier.split(\"ms\")[0]) : 250;\n    handler3 = debounce(handler3, wait);\n  }\n\n  if (modifiers.includes(\"throttle\")) {\n    let nextModifier = modifiers[modifiers.indexOf(\"throttle\") + 1] || \"invalid-wait\";\n    let wait = isNumeric(nextModifier.split(\"ms\")[0]) ? Number(nextModifier.split(\"ms\")[0]) : 250;\n    handler3 = throttle(handler3, wait);\n  }\n\n  listenerTarget.addEventListener(event, handler3, options);\n  return () => {\n    listenerTarget.removeEventListener(event, handler3, options);\n  };\n}\n\nfunction dotSyntax(subject) {\n  return subject.replace(/-/g, \".\");\n}\n\nfunction camelCase2(subject) {\n  return subject.toLowerCase().replace(/-(\\w)/g, (match, char) => char.toUpperCase());\n}\n\nfunction isNumeric(subject) {\n  return !Array.isArray(subject) && !isNaN(subject);\n}\n\nfunction kebabCase2(subject) {\n  return subject.replace(/([a-z])([A-Z])/g, \"$1-$2\").replace(/[_\\s]/, \"-\").toLowerCase();\n}\n\nfunction isKeyEvent(event) {\n  return [\"keydown\", \"keyup\"].includes(event);\n}\n\nfunction isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {\n  let keyModifiers = modifiers.filter(i => {\n    return ![\"window\", \"document\", \"prevent\", \"stop\", \"once\"].includes(i);\n  });\n\n  if (keyModifiers.includes(\"debounce\")) {\n    let debounceIndex = keyModifiers.indexOf(\"debounce\");\n    keyModifiers.splice(debounceIndex, isNumeric((keyModifiers[debounceIndex + 1] || \"invalid-wait\").split(\"ms\")[0]) ? 2 : 1);\n  }\n\n  if (keyModifiers.length === 0) return false;\n  if (keyModifiers.length === 1 && keyToModifiers(e.key).includes(keyModifiers[0])) return false;\n  const systemKeyModifiers = [\"ctrl\", \"shift\", \"alt\", \"meta\", \"cmd\", \"super\"];\n  const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier));\n  keyModifiers = keyModifiers.filter(i => !selectedSystemKeyModifiers.includes(i));\n\n  if (selectedSystemKeyModifiers.length > 0) {\n    const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\n      if (modifier === \"cmd\" || modifier === \"super\") modifier = \"meta\";\n      return e[`${modifier}Key`];\n    });\n\n    if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {\n      if (keyToModifiers(e.key).includes(keyModifiers[0])) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction keyToModifiers(key) {\n  if (!key) return [];\n  key = kebabCase2(key);\n  let modifierToKeyMap = {\n    ctrl: \"control\",\n    slash: \"/\",\n    space: \"-\",\n    spacebar: \"-\",\n    cmd: \"meta\",\n    esc: \"escape\",\n    up: \"arrow-up\",\n    down: \"arrow-down\",\n    left: \"arrow-left\",\n    right: \"arrow-right\",\n    period: \".\",\n    equal: \"=\"\n  };\n  modifierToKeyMap[key] = key;\n  return Object.keys(modifierToKeyMap).map(modifier => {\n    if (modifierToKeyMap[modifier] === key) return modifier;\n  }).filter(modifier => modifier);\n} // packages/alpinejs/src/directives/x-model.js\n\n\ndirective(\"model\", (el, {\n  modifiers,\n  expression\n}, {\n  effect: effect3,\n  cleanup: cleanup2\n}) => {\n  let evaluate2 = evaluateLater(el, expression);\n  let assignmentExpression = `${expression} = rightSideOfExpression($event, ${expression})`;\n  let evaluateAssignment = evaluateLater(el, assignmentExpression);\n  var event = el.tagName.toLowerCase() === \"select\" || [\"checkbox\", \"radio\"].includes(el.type) || modifiers.includes(\"lazy\") ? \"change\" : \"input\";\n  let assigmentFunction = generateAssignmentFunction(el, modifiers, expression);\n  let removeListener = on(el, event, modifiers, e => {\n    evaluateAssignment(() => {}, {\n      scope: {\n        $event: e,\n        rightSideOfExpression: assigmentFunction\n      }\n    });\n  });\n  if (!el._x_removeModelListeners) el._x_removeModelListeners = {};\n  el._x_removeModelListeners[\"default\"] = removeListener;\n  cleanup2(() => el._x_removeModelListeners[\"default\"]());\n  let evaluateSetModel = evaluateLater(el, `${expression} = __placeholder`);\n  el._x_model = {\n    get() {\n      let result;\n      evaluate2(value => result = value);\n      return result;\n    },\n\n    set(value) {\n      evaluateSetModel(() => {}, {\n        scope: {\n          __placeholder: value\n        }\n      });\n    }\n\n  };\n\n  el._x_forceModelUpdate = () => {\n    evaluate2(value => {\n      if (value === void 0 && expression.match(/\\./)) value = \"\";\n      window.fromModel = true;\n      mutateDom(() => bind(el, \"value\", value));\n      delete window.fromModel;\n    });\n  };\n\n  effect3(() => {\n    if (modifiers.includes(\"unintrusive\") && document.activeElement.isSameNode(el)) return;\n\n    el._x_forceModelUpdate();\n  });\n});\n\nfunction generateAssignmentFunction(el, modifiers, expression) {\n  if (el.type === \"radio\") {\n    mutateDom(() => {\n      if (!el.hasAttribute(\"name\")) el.setAttribute(\"name\", expression);\n    });\n  }\n\n  return (event, currentValue) => {\n    return mutateDom(() => {\n      if (event instanceof CustomEvent && event.detail !== void 0) {\n        return event.detail || event.target.value;\n      } else if (el.type === \"checkbox\") {\n        if (Array.isArray(currentValue)) {\n          let newValue = modifiers.includes(\"number\") ? safeParseNumber(event.target.value) : event.target.value;\n          return event.target.checked ? currentValue.concat([newValue]) : currentValue.filter(el2 => !checkedAttrLooseCompare2(el2, newValue));\n        } else {\n          return event.target.checked;\n        }\n      } else if (el.tagName.toLowerCase() === \"select\" && el.multiple) {\n        return modifiers.includes(\"number\") ? Array.from(event.target.selectedOptions).map(option => {\n          let rawValue = option.value || option.text;\n          return safeParseNumber(rawValue);\n        }) : Array.from(event.target.selectedOptions).map(option => {\n          return option.value || option.text;\n        });\n      } else {\n        let rawValue = event.target.value;\n        return modifiers.includes(\"number\") ? safeParseNumber(rawValue) : modifiers.includes(\"trim\") ? rawValue.trim() : rawValue;\n      }\n    });\n  };\n}\n\nfunction safeParseNumber(rawValue) {\n  let number = rawValue ? parseFloat(rawValue) : null;\n  return isNumeric2(number) ? number : rawValue;\n}\n\nfunction checkedAttrLooseCompare2(valueA, valueB) {\n  return valueA == valueB;\n}\n\nfunction isNumeric2(subject) {\n  return !Array.isArray(subject) && !isNaN(subject);\n} // packages/alpinejs/src/directives/x-cloak.js\n\n\ndirective(\"cloak\", el => queueMicrotask(() => mutateDom(() => el.removeAttribute(prefix(\"cloak\"))))); // packages/alpinejs/src/directives/x-init.js\n\naddInitSelector(() => `[${prefix(\"init\")}]`);\ndirective(\"init\", skipDuringClone((el, {\n  expression\n}, {\n  evaluate: evaluate2\n}) => {\n  if (typeof expression === \"string\") {\n    return !!expression.trim() && evaluate2(expression, {}, false);\n  }\n\n  return evaluate2(expression, {}, false);\n})); // packages/alpinejs/src/directives/x-text.js\n\ndirective(\"text\", (el, {\n  expression\n}, {\n  effect: effect3,\n  evaluateLater: evaluateLater2\n}) => {\n  let evaluate2 = evaluateLater2(expression);\n  effect3(() => {\n    evaluate2(value => {\n      mutateDom(() => {\n        el.textContent = value;\n      });\n    });\n  });\n}); // packages/alpinejs/src/directives/x-html.js\n\ndirective(\"html\", (el, {\n  expression\n}, {\n  effect: effect3,\n  evaluateLater: evaluateLater2\n}) => {\n  let evaluate2 = evaluateLater2(expression);\n  effect3(() => {\n    evaluate2(value => {\n      mutateDom(() => {\n        el.innerHTML = value;\n        el._x_ignoreSelf = true;\n        initTree(el);\n        delete el._x_ignoreSelf;\n      });\n    });\n  });\n}); // packages/alpinejs/src/directives/x-bind.js\n\nmapAttributes(startingWith(\":\", into(prefix(\"bind:\"))));\ndirective(\"bind\", (el, {\n  value,\n  modifiers,\n  expression,\n  original\n}, {\n  effect: effect3\n}) => {\n  if (!value) {\n    return applyBindingsObject(el, expression, original, effect3);\n  }\n\n  if (value === \"key\") return storeKeyForXFor(el, expression);\n  let evaluate2 = evaluateLater(el, expression);\n  effect3(() => evaluate2(result => {\n    if (result === void 0 && expression.match(/\\./)) result = \"\";\n    mutateDom(() => bind(el, value, result, modifiers));\n  }));\n});\n\nfunction applyBindingsObject(el, expression, original, effect3) {\n  let bindingProviders = {};\n  injectBindingProviders(bindingProviders);\n  let getBindings = evaluateLater(el, expression);\n  let cleanupRunners = [];\n\n  while (cleanupRunners.length) cleanupRunners.pop()();\n\n  getBindings(bindings => {\n    let attributes = Object.entries(bindings).map(([name, value]) => ({\n      name,\n      value\n    }));\n    let staticAttributes = attributesOnly(attributes);\n    attributes = attributes.map(attribute => {\n      if (staticAttributes.find(attr => attr.name === attribute.name)) {\n        return {\n          name: `x-bind:${attribute.name}`,\n          value: `\"${attribute.value}\"`\n        };\n      }\n\n      return attribute;\n    });\n    directives(el, attributes, original).map(handle => {\n      cleanupRunners.push(handle.runCleanups);\n      handle();\n    });\n  }, {\n    scope: bindingProviders\n  });\n}\n\nfunction storeKeyForXFor(el, expression) {\n  el._x_keyExpression = expression;\n} // packages/alpinejs/src/directives/x-data.js\n\n\naddRootSelector(() => `[${prefix(\"data\")}]`);\ndirective(\"data\", skipDuringClone((el, {\n  expression\n}, {\n  cleanup: cleanup2\n}) => {\n  expression = expression === \"\" ? \"{}\" : expression;\n  let magicContext = {};\n  injectMagics(magicContext, el);\n  let dataProviderContext = {};\n  injectDataProviders(dataProviderContext, magicContext);\n  let data2 = evaluate(el, expression, {\n    scope: dataProviderContext\n  });\n  if (data2 === void 0) data2 = {};\n  injectMagics(data2, el);\n  let reactiveData = reactive(data2);\n  initInterceptors(reactiveData);\n  let undo = addScopeToNode(el, reactiveData);\n  reactiveData[\"init\"] && evaluate(el, reactiveData[\"init\"]);\n  cleanup2(() => {\n    reactiveData[\"destroy\"] && evaluate(el, reactiveData[\"destroy\"]);\n    undo();\n  });\n})); // packages/alpinejs/src/directives/x-show.js\n\ndirective(\"show\", (el, {\n  modifiers,\n  expression\n}, {\n  effect: effect3\n}) => {\n  let evaluate2 = evaluateLater(el, expression);\n  if (!el._x_doHide) el._x_doHide = () => {\n    mutateDom(() => el.style.display = \"none\");\n  };\n  if (!el._x_doShow) el._x_doShow = () => {\n    mutateDom(() => {\n      if (el.style.length === 1 && el.style.display === \"none\") {\n        el.removeAttribute(\"style\");\n      } else {\n        el.style.removeProperty(\"display\");\n      }\n    });\n  };\n\n  let hide = () => {\n    el._x_doHide();\n\n    el._x_isShown = false;\n  };\n\n  let show = () => {\n    el._x_doShow();\n\n    el._x_isShown = true;\n  };\n\n  let clickAwayCompatibleShow = () => setTimeout(show);\n\n  let toggle = once(value => value ? show() : hide(), value => {\n    if (typeof el._x_toggleAndCascadeWithTransitions === \"function\") {\n      el._x_toggleAndCascadeWithTransitions(el, value, show, hide);\n    } else {\n      value ? clickAwayCompatibleShow() : hide();\n    }\n  });\n  let oldValue;\n  let firstTime = true;\n  effect3(() => evaluate2(value => {\n    if (!firstTime && value === oldValue) return;\n    if (modifiers.includes(\"immediate\")) value ? clickAwayCompatibleShow() : hide();\n    toggle(value);\n    oldValue = value;\n    firstTime = false;\n  }));\n}); // packages/alpinejs/src/directives/x-for.js\n\ndirective(\"for\", (el, {\n  expression\n}, {\n  effect: effect3,\n  cleanup: cleanup2\n}) => {\n  let iteratorNames = parseForExpression(expression);\n  let evaluateItems = evaluateLater(el, iteratorNames.items);\n  let evaluateKey = evaluateLater(el, el._x_keyExpression || \"index\");\n  el._x_prevKeys = [];\n  el._x_lookup = {};\n  effect3(() => loop(el, iteratorNames, evaluateItems, evaluateKey));\n  cleanup2(() => {\n    Object.values(el._x_lookup).forEach(el2 => el2.remove());\n    delete el._x_prevKeys;\n    delete el._x_lookup;\n  });\n});\n\nfunction loop(el, iteratorNames, evaluateItems, evaluateKey) {\n  let isObject2 = i => typeof i === \"object\" && !Array.isArray(i);\n\n  let templateEl = el;\n  evaluateItems(items => {\n    if (isNumeric3(items) && items >= 0) {\n      items = Array.from(Array(items).keys(), i => i + 1);\n    }\n\n    if (items === void 0) items = [];\n    let lookup = el._x_lookup;\n    let prevKeys = el._x_prevKeys;\n    let scopes = [];\n    let keys = [];\n\n    if (isObject2(items)) {\n      items = Object.entries(items).map(([key, value]) => {\n        let scope2 = getIterationScopeVariables(iteratorNames, value, key, items);\n        evaluateKey(value2 => keys.push(value2), {\n          scope: {\n            index: key,\n            ...scope2\n          }\n        });\n        scopes.push(scope2);\n      });\n    } else {\n      for (let i = 0; i < items.length; i++) {\n        let scope2 = getIterationScopeVariables(iteratorNames, items[i], i, items);\n        evaluateKey(value => keys.push(value), {\n          scope: {\n            index: i,\n            ...scope2\n          }\n        });\n        scopes.push(scope2);\n      }\n    }\n\n    let adds = [];\n    let moves = [];\n    let removes = [];\n    let sames = [];\n\n    for (let i = 0; i < prevKeys.length; i++) {\n      let key = prevKeys[i];\n      if (keys.indexOf(key) === -1) removes.push(key);\n    }\n\n    prevKeys = prevKeys.filter(key => !removes.includes(key));\n    let lastKey = \"template\";\n\n    for (let i = 0; i < keys.length; i++) {\n      let key = keys[i];\n      let prevIndex = prevKeys.indexOf(key);\n\n      if (prevIndex === -1) {\n        prevKeys.splice(i, 0, key);\n        adds.push([lastKey, i]);\n      } else if (prevIndex !== i) {\n        let keyInSpot = prevKeys.splice(i, 1)[0];\n        let keyForSpot = prevKeys.splice(prevIndex - 1, 1)[0];\n        prevKeys.splice(i, 0, keyForSpot);\n        prevKeys.splice(prevIndex, 0, keyInSpot);\n        moves.push([keyInSpot, keyForSpot]);\n      } else {\n        sames.push(key);\n      }\n\n      lastKey = key;\n    }\n\n    for (let i = 0; i < removes.length; i++) {\n      let key = removes[i];\n\n      if (!!lookup[key]._x_effects) {\n        lookup[key]._x_effects.forEach(dequeueJob);\n      }\n\n      lookup[key].remove();\n      lookup[key] = null;\n      delete lookup[key];\n    }\n\n    for (let i = 0; i < moves.length; i++) {\n      let [keyInSpot, keyForSpot] = moves[i];\n      let elInSpot = lookup[keyInSpot];\n      let elForSpot = lookup[keyForSpot];\n      let marker = document.createElement(\"div\");\n      mutateDom(() => {\n        elForSpot.after(marker);\n        elInSpot.after(elForSpot);\n        elForSpot._x_currentIfEl && elForSpot.after(elForSpot._x_currentIfEl);\n        marker.before(elInSpot);\n        elInSpot._x_currentIfEl && elInSpot.after(elInSpot._x_currentIfEl);\n        marker.remove();\n      });\n      refreshScope(elForSpot, scopes[keys.indexOf(keyForSpot)]);\n    }\n\n    for (let i = 0; i < adds.length; i++) {\n      let [lastKey2, index] = adds[i];\n      let lastEl = lastKey2 === \"template\" ? templateEl : lookup[lastKey2];\n      if (lastEl._x_currentIfEl) lastEl = lastEl._x_currentIfEl;\n      let scope2 = scopes[index];\n      let key = keys[index];\n      let clone2 = document.importNode(templateEl.content, true).firstElementChild;\n      addScopeToNode(clone2, reactive(scope2), templateEl);\n      mutateDom(() => {\n        lastEl.after(clone2);\n        initTree(clone2);\n      });\n\n      if (typeof key === \"object\") {\n        warn(\"x-for key cannot be an object, it must be a string or an integer\", templateEl);\n      }\n\n      lookup[key] = clone2;\n    }\n\n    for (let i = 0; i < sames.length; i++) {\n      refreshScope(lookup[sames[i]], scopes[keys.indexOf(sames[i])]);\n    }\n\n    templateEl._x_prevKeys = keys;\n  });\n}\n\nfunction parseForExpression(expression) {\n  let forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\n  let stripParensRE = /^\\s*\\(|\\)\\s*$/g;\n  let forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\n  let inMatch = expression.match(forAliasRE);\n  if (!inMatch) return;\n  let res = {};\n  res.items = inMatch[2].trim();\n  let item = inMatch[1].replace(stripParensRE, \"\").trim();\n  let iteratorMatch = item.match(forIteratorRE);\n\n  if (iteratorMatch) {\n    res.item = item.replace(forIteratorRE, \"\").trim();\n    res.index = iteratorMatch[1].trim();\n\n    if (iteratorMatch[2]) {\n      res.collection = iteratorMatch[2].trim();\n    }\n  } else {\n    res.item = item;\n  }\n\n  return res;\n}\n\nfunction getIterationScopeVariables(iteratorNames, item, index, items) {\n  let scopeVariables = {};\n\n  if (/^\\[.*\\]$/.test(iteratorNames.item) && Array.isArray(item)) {\n    let names = iteratorNames.item.replace(\"[\", \"\").replace(\"]\", \"\").split(\",\").map(i => i.trim());\n    names.forEach((name, i) => {\n      scopeVariables[name] = item[i];\n    });\n  } else if (/^\\{.*\\}$/.test(iteratorNames.item) && !Array.isArray(item) && typeof item === \"object\") {\n    let names = iteratorNames.item.replace(\"{\", \"\").replace(\"}\", \"\").split(\",\").map(i => i.trim());\n    names.forEach(name => {\n      scopeVariables[name] = item[name];\n    });\n  } else {\n    scopeVariables[iteratorNames.item] = item;\n  }\n\n  if (iteratorNames.index) scopeVariables[iteratorNames.index] = index;\n  if (iteratorNames.collection) scopeVariables[iteratorNames.collection] = items;\n  return scopeVariables;\n}\n\nfunction isNumeric3(subject) {\n  return !Array.isArray(subject) && !isNaN(subject);\n} // packages/alpinejs/src/directives/x-ref.js\n\n\nfunction handler2() {}\n\nhandler2.inline = (el, {\n  expression\n}, {\n  cleanup: cleanup2\n}) => {\n  let root = closestRoot(el);\n  if (!root._x_refs) root._x_refs = {};\n  root._x_refs[expression] = el;\n  cleanup2(() => delete root._x_refs[expression]);\n};\n\ndirective(\"ref\", handler2); // packages/alpinejs/src/directives/x-if.js\n\ndirective(\"if\", (el, {\n  expression\n}, {\n  effect: effect3,\n  cleanup: cleanup2\n}) => {\n  let evaluate2 = evaluateLater(el, expression);\n\n  let show = () => {\n    if (el._x_currentIfEl) return el._x_currentIfEl;\n    let clone2 = el.content.cloneNode(true).firstElementChild;\n    addScopeToNode(clone2, {}, el);\n    mutateDom(() => {\n      el.after(clone2);\n      initTree(clone2);\n    });\n    el._x_currentIfEl = clone2;\n\n    el._x_undoIf = () => {\n      walk(clone2, node => {\n        if (!!node._x_effects) {\n          node._x_effects.forEach(dequeueJob);\n        }\n      });\n      clone2.remove();\n      delete el._x_currentIfEl;\n    };\n\n    return clone2;\n  };\n\n  let hide = () => {\n    if (!el._x_undoIf) return;\n\n    el._x_undoIf();\n\n    delete el._x_undoIf;\n  };\n\n  effect3(() => evaluate2(value => {\n    value ? show() : hide();\n  }));\n  cleanup2(() => el._x_undoIf && el._x_undoIf());\n}); // packages/alpinejs/src/directives/x-id.js\n\ndirective(\"id\", (el, {\n  expression\n}, {\n  evaluate: evaluate2\n}) => {\n  let names = evaluate2(expression);\n  names.forEach(name => setIdRoot(el, name));\n}); // packages/alpinejs/src/directives/x-on.js\n\nmapAttributes(startingWith(\"@\", into(prefix(\"on:\"))));\ndirective(\"on\", skipDuringClone((el, {\n  value,\n  modifiers,\n  expression\n}, {\n  cleanup: cleanup2\n}) => {\n  let evaluate2 = expression ? evaluateLater(el, expression) : () => {};\n\n  if (el.tagName.toLowerCase() === \"template\") {\n    if (!el._x_forwardEvents) el._x_forwardEvents = [];\n    if (!el._x_forwardEvents.includes(value)) el._x_forwardEvents.push(value);\n  }\n\n  let removeListener = on(el, value, modifiers, e => {\n    evaluate2(() => {}, {\n      scope: {\n        $event: e\n      },\n      params: [e]\n    });\n  });\n  cleanup2(() => removeListener());\n})); // packages/alpinejs/src/directives/index.js\n\nwarnMissingPluginDirective(\"Collapse\", \"collapse\", \"collapse\");\nwarnMissingPluginDirective(\"Intersect\", \"intersect\", \"intersect\");\nwarnMissingPluginDirective(\"Focus\", \"trap\", \"focus\");\nwarnMissingPluginDirective(\"Mask\", \"mask\", \"mask\");\n\nfunction warnMissingPluginDirective(name, directiveName2, slug) {\n  directive(directiveName2, el => warn(`You can't use [x-${directiveName2}] without first installing the \"${name}\" plugin here: https://alpinejs.dev/plugins/${slug}`, el));\n} // packages/alpinejs/src/index.js\n\n\nalpine_default.setEvaluator(normalEvaluator);\nalpine_default.setReactivityEngine({\n  reactive: reactive2,\n  effect: effect2,\n  release: stop,\n  raw: toRaw\n});\nvar src_default = alpine_default; // packages/alpinejs/builds/module.js\n\nvar module_default = src_default;\n\n\n//# sourceURL=webpack:///./node_modules/alpinejs/dist/module.esm.js?");

/***/ }),

/***/ "./node_modules/baguettebox.js/dist/baguetteBox.min.js":
/*!*************************************************************!*\
  !*** ./node_modules/baguettebox.js/dist/baguetteBox.min.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * baguetteBox.js\n * @author  feimosi\n * @version 1.11.1\n * @url https://github.com/feimosi/baguetteBox.js\n */\n!function (e, t) {\n  \"use strict\";\n\n   true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (t),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;\n}(this, function () {\n  \"use strict\";\n\n  var r,\n      l,\n      u,\n      c,\n      d,\n      f = '<svg width=\"44\" height=\"60\"><polyline points=\"30 10 10 30 30 50\" stroke=\"rgba(255,255,255,0.5)\" stroke-width=\"4\"stroke-linecap=\"butt\" fill=\"none\" stroke-linejoin=\"round\"/></svg>',\n      g = '<svg width=\"44\" height=\"60\"><polyline points=\"14 10 34 30 14 50\" stroke=\"rgba(255,255,255,0.5)\" stroke-width=\"4\"stroke-linecap=\"butt\" fill=\"none\" stroke-linejoin=\"round\"/></svg>',\n      p = '<svg width=\"30\" height=\"30\"><g stroke=\"rgb(160,160,160)\" stroke-width=\"4\"><line x1=\"5\" y1=\"5\" x2=\"25\" y2=\"25\"/><line x1=\"5\" y1=\"25\" x2=\"25\" y2=\"5\"/></g></svg>',\n      b = {},\n      v = {\n    captions: !0,\n    buttons: \"auto\",\n    fullScreen: !1,\n    noScrollbars: !1,\n    bodyClass: \"baguetteBox-open\",\n    titleTag: !1,\n    async: !1,\n    preload: 2,\n    animation: \"slideIn\",\n    afterShow: null,\n    afterHide: null,\n    onChange: null,\n    overlayBackgroundColor: \"rgba(0,0,0,.8)\"\n  },\n      m = {},\n      h = [],\n      o = 0,\n      n = !1,\n      i = {},\n      a = !1,\n      y = /.+\\.(gif|jpe?g|png|webp)/i,\n      w = {},\n      k = [],\n      s = null,\n      x = function (e) {\n    -1 !== e.target.id.indexOf(\"baguette-img\") && j();\n  },\n      E = function (e) {\n    e.stopPropagation ? e.stopPropagation() : e.cancelBubble = !0, D();\n  },\n      C = function (e) {\n    e.stopPropagation ? e.stopPropagation() : e.cancelBubble = !0, X();\n  },\n      B = function (e) {\n    e.stopPropagation ? e.stopPropagation() : e.cancelBubble = !0, j();\n  },\n      T = function (e) {\n    i.count++, 1 < i.count && (i.multitouch = !0), i.startX = e.changedTouches[0].pageX, i.startY = e.changedTouches[0].pageY;\n  },\n      N = function (e) {\n    if (!a && !i.multitouch) {\n      e.preventDefault ? e.preventDefault() : e.returnValue = !1;\n      var t = e.touches[0] || e.changedTouches[0];\n      40 < t.pageX - i.startX ? (a = !0, D()) : t.pageX - i.startX < -40 ? (a = !0, X()) : 100 < i.startY - t.pageY && j();\n    }\n  },\n      L = function () {\n    i.count--, i.count <= 0 && (i.multitouch = !1), a = !1;\n  },\n      A = function () {\n    L();\n  },\n      P = function (e) {\n    \"block\" === r.style.display && r.contains && !r.contains(e.target) && (e.stopPropagation(), Y());\n  };\n\n  function S(e) {\n    if (w.hasOwnProperty(e)) {\n      var t = w[e].galleries;\n      [].forEach.call(t, function (e) {\n        [].forEach.call(e, function (e) {\n          W(e.imageElement, \"click\", e.eventHandler);\n        }), h === e && (h = []);\n      }), delete w[e];\n    }\n  }\n\n  function F(e) {\n    switch (e.keyCode) {\n      case 37:\n        D();\n        break;\n\n      case 39:\n        X();\n        break;\n\n      case 27:\n        j();\n        break;\n\n      case 36:\n        !function t(e) {\n          e && e.preventDefault();\n          return M(0);\n        }(e);\n        break;\n\n      case 35:\n        !function n(e) {\n          e && e.preventDefault();\n          return M(h.length - 1);\n        }(e);\n    }\n  }\n\n  function H(e, t) {\n    if (h !== e) {\n      for (h = e, function s(e) {\n        e = e || {};\n\n        for (var t in v) b[t] = v[t], \"undefined\" != typeof e[t] && (b[t] = e[t]);\n\n        l.style.transition = l.style.webkitTransition = \"fadeIn\" === b.animation ? \"opacity .4s ease\" : \"slideIn\" === b.animation ? \"\" : \"none\", \"auto\" === b.buttons && ((\"ontouchstart\" in window) || 1 === h.length) && (b.buttons = !1);\n        u.style.display = c.style.display = b.buttons ? \"\" : \"none\";\n\n        try {\n          r.style.backgroundColor = b.overlayBackgroundColor;\n        } catch (n) {}\n      }(t); l.firstChild;) l.removeChild(l.firstChild);\n\n      for (var n, o = [], i = [], a = k.length = 0; a < e.length; a++) (n = J(\"div\")).className = \"full-image\", n.id = \"baguette-img-\" + a, k.push(n), o.push(\"baguetteBox-figure-\" + a), i.push(\"baguetteBox-figcaption-\" + a), l.appendChild(k[a]);\n\n      r.setAttribute(\"aria-labelledby\", o.join(\" \")), r.setAttribute(\"aria-describedby\", i.join(\" \"));\n    }\n  }\n\n  function I(e) {\n    b.noScrollbars && (document.documentElement.style.overflowY = \"hidden\", document.body.style.overflowY = \"scroll\"), \"block\" !== r.style.display && (U(document, \"keydown\", F), i = {\n      count: 0,\n      startX: null,\n      startY: null\n    }, q(o = e, function () {\n      z(o), V(o);\n    }), R(), r.style.display = \"block\", b.fullScreen && function t() {\n      r.requestFullscreen ? r.requestFullscreen() : r.webkitRequestFullscreen ? r.webkitRequestFullscreen() : r.mozRequestFullScreen && r.mozRequestFullScreen();\n    }(), setTimeout(function () {\n      r.className = \"visible\", b.bodyClass && document.body.classList && document.body.classList.add(b.bodyClass), b.afterShow && b.afterShow();\n    }, 50), b.onChange && b.onChange(o, k.length), s = document.activeElement, Y(), n = !0);\n  }\n\n  function Y() {\n    b.buttons ? u.focus() : d.focus();\n  }\n\n  function j() {\n    b.noScrollbars && (document.documentElement.style.overflowY = \"auto\", document.body.style.overflowY = \"auto\"), \"none\" !== r.style.display && (W(document, \"keydown\", F), r.className = \"\", setTimeout(function () {\n      r.style.display = \"none\", document.fullscreen && function e() {\n        document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen && document.webkitExitFullscreen();\n      }(), b.bodyClass && document.body.classList && document.body.classList.remove(b.bodyClass), b.afterHide && b.afterHide(), s && s.focus(), n = !1;\n    }, 500));\n  }\n\n  function q(t, n) {\n    var e = k[t],\n        o = h[t];\n    if (void 0 !== e && void 0 !== o) if (e.getElementsByTagName(\"img\")[0]) n && n();else {\n      var i = o.imageElement,\n          a = i.getElementsByTagName(\"img\")[0],\n          s = \"function\" == typeof b.captions ? b.captions.call(h, i) : i.getAttribute(\"data-caption\") || i.title,\n          r = function d(e) {\n        var t = e.href;\n\n        if (e.dataset) {\n          var n = [];\n\n          for (var o in e.dataset) \"at-\" !== o.substring(0, 3) || isNaN(o.substring(3)) || (n[o.replace(\"at-\", \"\")] = e.dataset[o]);\n\n          for (var i = Object.keys(n).sort(function (e, t) {\n            return parseInt(e, 10) < parseInt(t, 10) ? -1 : 1;\n          }), a = window.innerWidth * window.devicePixelRatio, s = 0; s < i.length - 1 && i[s] < a;) s++;\n\n          t = n[i[s]] || t;\n        }\n\n        return t;\n      }(i),\n          l = J(\"figure\");\n\n      if (l.id = \"baguetteBox-figure-\" + t, l.innerHTML = '<div class=\"baguetteBox-spinner\"><div class=\"baguetteBox-double-bounce1\"></div><div class=\"baguetteBox-double-bounce2\"></div></div>', b.captions && s) {\n        var u = J(\"figcaption\");\n        u.id = \"baguetteBox-figcaption-\" + t, u.innerHTML = s, l.appendChild(u);\n      }\n\n      e.appendChild(l);\n      var c = J(\"img\");\n      c.onload = function () {\n        var e = document.querySelector(\"#baguette-img-\" + t + \" .baguetteBox-spinner\");\n        l.removeChild(e), !b.async && n && n();\n      }, c.setAttribute(\"src\", r), c.alt = a && a.alt || \"\", b.titleTag && s && (c.title = s), l.appendChild(c), b.async && n && n();\n    }\n  }\n\n  function X() {\n    return M(o + 1);\n  }\n\n  function D() {\n    return M(o - 1);\n  }\n\n  function M(e, t) {\n    return !n && 0 <= e && e < t.length ? (H(t, b), I(e), !0) : e < 0 ? (b.animation && O(\"left\"), !1) : e >= k.length ? (b.animation && O(\"right\"), !1) : (q(o = e, function () {\n      z(o), V(o);\n    }), R(), b.onChange && b.onChange(o, k.length), !0);\n  }\n\n  function O(e) {\n    l.className = \"bounce-from-\" + e, setTimeout(function () {\n      l.className = \"\";\n    }, 400);\n  }\n\n  function R() {\n    var e = 100 * -o + \"%\";\n    \"fadeIn\" === b.animation ? (l.style.opacity = 0, setTimeout(function () {\n      m.transforms ? l.style.transform = l.style.webkitTransform = \"translate3d(\" + e + \",0,0)\" : l.style.left = e, l.style.opacity = 1;\n    }, 400)) : m.transforms ? l.style.transform = l.style.webkitTransform = \"translate3d(\" + e + \",0,0)\" : l.style.left = e;\n  }\n\n  function z(e) {\n    e - o >= b.preload || q(e + 1, function () {\n      z(e + 1);\n    });\n  }\n\n  function V(e) {\n    o - e >= b.preload || q(e - 1, function () {\n      V(e - 1);\n    });\n  }\n\n  function U(e, t, n, o) {\n    e.addEventListener ? e.addEventListener(t, n, o) : e.attachEvent(\"on\" + t, function (e) {\n      (e = e || window.event).target = e.target || e.srcElement, n(e);\n    });\n  }\n\n  function W(e, t, n, o) {\n    e.removeEventListener ? e.removeEventListener(t, n, o) : e.detachEvent(\"on\" + t, n);\n  }\n\n  function G(e) {\n    return document.getElementById(e);\n  }\n\n  function J(e) {\n    return document.createElement(e);\n  }\n\n  return [].forEach || (Array.prototype.forEach = function (e, t) {\n    for (var n = 0; n < this.length; n++) e.call(t, this[n], n, this);\n  }), [].filter || (Array.prototype.filter = function (e, t, n, o, i) {\n    for (n = this, o = [], i = 0; i < n.length; i++) e.call(t, n[i], i, n) && o.push(n[i]);\n\n    return o;\n  }), {\n    run: function K(e, t) {\n      return m.transforms = function n() {\n        var e = J(\"div\");\n        return \"undefined\" != typeof e.style.perspective || \"undefined\" != typeof e.style.webkitPerspective;\n      }(), m.svg = function o() {\n        var e = J(\"div\");\n        return e.innerHTML = \"<svg/>\", \"http://www.w3.org/2000/svg\" === (e.firstChild && e.firstChild.namespaceURI);\n      }(), m.passiveEvents = function i() {\n        var e = !1;\n\n        try {\n          var t = Object.defineProperty({}, \"passive\", {\n            get: function () {\n              e = !0;\n            }\n          });\n          window.addEventListener(\"test\", null, t);\n        } catch (n) {}\n\n        return e;\n      }(), function a() {\n        if (r = G(\"baguetteBox-overlay\")) return l = G(\"baguetteBox-slider\"), u = G(\"previous-button\"), c = G(\"next-button\"), void (d = G(\"close-button\"));\n        (r = J(\"div\")).setAttribute(\"role\", \"dialog\"), r.id = \"baguetteBox-overlay\", document.getElementsByTagName(\"body\")[0].appendChild(r), (l = J(\"div\")).id = \"baguetteBox-slider\", r.appendChild(l), (u = J(\"button\")).setAttribute(\"type\", \"button\"), u.id = \"previous-button\", u.setAttribute(\"aria-label\", \"Previous\"), u.innerHTML = m.svg ? f : \"&lt;\", r.appendChild(u), (c = J(\"button\")).setAttribute(\"type\", \"button\"), c.id = \"next-button\", c.setAttribute(\"aria-label\", \"Next\"), c.innerHTML = m.svg ? g : \"&gt;\", r.appendChild(c), (d = J(\"button\")).setAttribute(\"type\", \"button\"), d.id = \"close-button\", d.setAttribute(\"aria-label\", \"Close\"), d.innerHTML = m.svg ? p : \"&times;\", r.appendChild(d), u.className = c.className = d.className = \"baguetteBox-button\", function n() {\n          var e = m.passiveEvents ? {\n            passive: !1\n          } : null,\n              t = m.passiveEvents ? {\n            passive: !0\n          } : null;\n          U(r, \"click\", x), U(u, \"click\", E), U(c, \"click\", C), U(d, \"click\", B), U(l, \"contextmenu\", A), U(r, \"touchstart\", T, t), U(r, \"touchmove\", N, e), U(r, \"touchend\", L), U(document, \"focus\", P, !0);\n        }();\n      }(), S(e), function s(e, a) {\n        var t = document.querySelectorAll(e),\n            n = {\n          galleries: [],\n          nodeList: t\n        };\n        return w[e] = n, [].forEach.call(t, function (e) {\n          a && a.filter && (y = a.filter);\n          var t = [];\n\n          if (t = \"A\" === e.tagName ? [e] : e.getElementsByTagName(\"a\"), 0 !== (t = [].filter.call(t, function (e) {\n            if (-1 === e.className.indexOf(a && a.ignoreClass)) return y.test(e.href);\n          })).length) {\n            var i = [];\n            [].forEach.call(t, function (e, t) {\n              var n = function (e) {\n                e.preventDefault ? e.preventDefault() : e.returnValue = !1, H(i, a), I(t);\n              },\n                  o = {\n                eventHandler: n,\n                imageElement: e\n              };\n\n              U(e, \"click\", n), i.push(o);\n            }), n.galleries.push(i);\n          }\n        }), n.galleries;\n      }(e, t);\n    },\n    show: M,\n    showNext: X,\n    showPrevious: D,\n    hide: j,\n    destroy: function e() {\n      !function n() {\n        var e = m.passiveEvents ? {\n          passive: !1\n        } : null,\n            t = m.passiveEvents ? {\n          passive: !0\n        } : null;\n        W(r, \"click\", x), W(u, \"click\", E), W(c, \"click\", C), W(d, \"click\", B), W(l, \"contextmenu\", A), W(r, \"touchstart\", T, t), W(r, \"touchmove\", N, e), W(r, \"touchend\", L), W(document, \"focus\", P, !0);\n      }(), function t() {\n        for (var e in w) w.hasOwnProperty(e) && S(e);\n      }(), W(document, \"keydown\", F), document.getElementsByTagName(\"body\")[0].removeChild(document.getElementById(\"baguetteBox-overlay\")), w = {}, h = [], o = 0;\n    }\n  };\n});\n\n//# sourceURL=webpack:///./node_modules/baguettebox.js/dist/baguetteBox.min.js?");

/***/ }),

/***/ "./node_modules/js-cookie/dist/js.cookie.js":
/*!**************************************************!*\
  !*** ./node_modules/js-cookie/dist/js.cookie.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*! js-cookie v3.0.1 | MIT */\n;\n\n(function (global, factory) {\n   true ? module.exports = factory() : undefined;\n})(this, function () {\n  'use strict';\n  /* eslint-disable no-var */\n\n  function assign(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        target[key] = source[key];\n      }\n    }\n\n    return target;\n  }\n  /* eslint-enable no-var */\n\n  /* eslint-disable no-var */\n\n\n  var defaultConverter = {\n    read: function (value) {\n      if (value[0] === '\"') {\n        value = value.slice(1, -1);\n      }\n\n      return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent);\n    },\n    write: function (value) {\n      return encodeURIComponent(value).replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g, decodeURIComponent);\n    }\n  };\n  /* eslint-enable no-var */\n\n  /* eslint-disable no-var */\n\n  function init(converter, defaultAttributes) {\n    function set(key, value, attributes) {\n      if (typeof document === 'undefined') {\n        return;\n      }\n\n      attributes = assign({}, defaultAttributes, attributes);\n\n      if (typeof attributes.expires === 'number') {\n        attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n      }\n\n      if (attributes.expires) {\n        attributes.expires = attributes.expires.toUTCString();\n      }\n\n      key = encodeURIComponent(key).replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent).replace(/[()]/g, escape);\n      var stringifiedAttributes = '';\n\n      for (var attributeName in attributes) {\n        if (!attributes[attributeName]) {\n          continue;\n        }\n\n        stringifiedAttributes += '; ' + attributeName;\n\n        if (attributes[attributeName] === true) {\n          continue;\n        } // Considers RFC 6265 section 5.2:\n        // ...\n        // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n        //     character:\n        // Consume the characters of the unparsed-attributes up to,\n        // not including, the first %x3B (\";\") character.\n        // ...\n\n\n        stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n      }\n\n      return document.cookie = key + '=' + converter.write(value, key) + stringifiedAttributes;\n    }\n\n    function get(key) {\n      if (typeof document === 'undefined' || arguments.length && !key) {\n        return;\n      } // To prevent the for loop in the first place assign an empty array\n      // in case there are no cookies at all.\n\n\n      var cookies = document.cookie ? document.cookie.split('; ') : [];\n      var jar = {};\n\n      for (var i = 0; i < cookies.length; i++) {\n        var parts = cookies[i].split('=');\n        var value = parts.slice(1).join('=');\n\n        try {\n          var foundKey = decodeURIComponent(parts[0]);\n          jar[foundKey] = converter.read(value, foundKey);\n\n          if (key === foundKey) {\n            break;\n          }\n        } catch (e) {}\n      }\n\n      return key ? jar[key] : jar;\n    }\n\n    return Object.create({\n      set: set,\n      get: get,\n      remove: function (key, attributes) {\n        set(key, '', assign({}, attributes, {\n          expires: -1\n        }));\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes));\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes);\n      }\n    }, {\n      attributes: {\n        value: Object.freeze(defaultAttributes)\n      },\n      converter: {\n        value: Object.freeze(converter)\n      }\n    });\n  }\n\n  var api = init(defaultConverter, {\n    path: '/'\n  });\n  /* eslint-enable no-var */\n\n  return api;\n});\n\n//# sourceURL=webpack:///./node_modules/js-cookie/dist/js.cookie.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _styles_styles_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./styles/styles.scss */ \"./src/styles/styles.scss\");\n/* harmony import */ var _scripts_scripts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/scripts */ \"./src/scripts/scripts.js\");\n/* harmony import */ var _scripts_stores_Consent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/stores/Consent */ \"./src/scripts/stores/Consent.js\");\n/* harmony import */ var alpinejs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! alpinejs */ \"./node_modules/alpinejs/dist/module.esm.js\");\n/* harmony import */ var _alpinejs_focus__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @alpinejs/focus */ \"./node_modules/@alpinejs/focus/dist/module.esm.js\");\n/* harmony import */ var _alpinejs_collapse__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @alpinejs/collapse */ \"./node_modules/@alpinejs/collapse/dist/module.esm.js\");\n/* harmony import */ var _alpinejs_intersect__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @alpinejs/intersect */ \"./node_modules/@alpinejs/intersect/dist/module.esm.js\");\n\n\n\n\nwindow.Alpine = alpinejs__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\n\n\n\nalpinejs__WEBPACK_IMPORTED_MODULE_3__[\"default\"].plugin(_alpinejs_focus__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\nalpinejs__WEBPACK_IMPORTED_MODULE_3__[\"default\"].plugin(_alpinejs_collapse__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\nalpinejs__WEBPACK_IMPORTED_MODULE_3__[\"default\"].plugin(_alpinejs_intersect__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\nalpinejs__WEBPACK_IMPORTED_MODULE_3__[\"default\"].store('consent', _scripts_stores_Consent__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\nalpinejs__WEBPACK_IMPORTED_MODULE_3__[\"default\"].store('modalOpen', false);\nalpinejs__WEBPACK_IMPORTED_MODULE_3__[\"default\"].start();\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/scripts/scripts.js":
/*!********************************!*\
  !*** ./src/scripts/scripts.js ***!
  \********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-cookie */ \"./node_modules/js-cookie/dist/js.cookie.js\");\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(js_cookie__WEBPACK_IMPORTED_MODULE_0__);\nwindow.baguetteBox = __webpack_require__(/*! baguettebox.js */ \"./node_modules/baguettebox.js/dist/baguetteBox.min.js\");\n\nwindow.initLightBox = function (id) {\n  window.baguetteBox.run(id);\n};\n\n\nwindow.Cookies = js_cookie__WEBPACK_IMPORTED_MODULE_0___default.a; // import {getLCP, getFID, getCLS, getTTFB, getFCP} from 'web-vitals';\n//\n// getCLS(console.log);\n// getFID(console.log);\n// getLCP(console.log);\n// getFCP(console.log);\n// getTTFB(console.log);\n\n//# sourceURL=webpack:///./src/scripts/scripts.js?");

/***/ }),

/***/ "./src/scripts/stores/Consent.js":
/*!***************************************!*\
  !*** ./src/scripts/stores/Consent.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  _mediaCookiesAllowed: null,\n\n  init() {\n    this._mediaCookiesAllowed = Cookies.get('mediaCookiesAllowed');\n  },\n\n  get mediaCookiesAllowed() {\n    return this._mediaCookiesAllowed === undefined || this._mediaCookiesAllowed == 0 ? false : true;\n  },\n\n  allowMediaCookies() {\n    this._mediaCookiesAllowed = 1;\n    Cookies.set('mediaCookiesAllowed', 1, {\n      expires: 365\n    });\n  },\n\n  rejectMediaCookies() {\n    this._mediaCookiesAllowed = 0;\n    Cookies.set('mediaCookiesAllowed', 0, {\n      expires: 365\n    });\n  },\n\n  get promptForUserChoice() {\n    return this._mediaCookiesAllowed === undefined;\n  }\n\n});\n\n//# sourceURL=webpack:///./src/scripts/stores/Consent.js?");

/***/ }),

/***/ "./src/styles/styles.scss":
/*!********************************!*\
  !*** ./src/styles/styles.scss ***!
  \********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack:///./src/styles/styles.scss?");

/***/ })

/******/ });